PARSFILE
! CarSim 8.0 (Torsionally Rigid)
! Vehicle-suspension arrangement: i_i
! Generated by VehicleSim Lisp on June 30, 2009

TITLE Baseline <* * Quick Start Guide Example>

! Input File: Run248_all.par
! Run was made 22:04 on May. 02, 2010

!-----------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION AND MODEL OPTIONS)
!-----------------------------------------------------------------------------------
IPRINT             25 ! Print increment: Output time step = TSTEP*IPRINT
NIMPORT             0 ! CALC -- Number of imported variables
NOUT_ANI_LIVE      88 ! CALC -- Number of variables sent live to RT animators
NOUT_EXPORT         0 ! CALC -- Number of exported output variables
NOUT_WRITE        755 ! CALC -- Number of variables written to ERD/BIN file
OPT_ALL_WRITE       1 ! Write everything to ERD file? 1 -> all, 0 -> only
                      !   specified outputs. Reset outputs whenever this is
                      !   changed.
OPT_BK_SC           0 ! Brake function with speed control: 0 -> Open loop: Turn
                      !   off speed control when brake is applied, 1 -> Closed
                      !   loop: Use speed control to apply brakes
OPT_BRAKE_MODEL     0 ! 0 -> MSC basic brake model; 1 -> not used (reserved for
                      !   future use); 2 -> Full dynamics model; 3 -> Full
                      !   dynamics model + control type A; 4 -> Full dynamics
                      !   model + control type B
OPT_BUFFER_WRITE    0 ! Buffer written outputs? 0 -> no, write during run, 1 ->
                      !   use buffer
OPT_CALC_STATIC     1 ! Calculate and echo static loads and inertia properties? 1
                      !   -> yes, 0 -> no
OPT_DRIVER_ACTION   1 ! Action of driver model: 1 -> Driver model steering is
                      !   applied, 0 -> Driver model calculates steering for
                      !   output only, but does not steer.
OPT_DRIVER_EXT      1 ! Behavior of driver model with external control of road
                      !   wheel steer: 1 -> Driver model is aware of external
                      !   road wheel steer input, 0 -> Driver model is unaware of
                      !   external road wheel steer input.
OPT_DRIVER_MODEL    1 ! Driver model? 1 -> yes, 0 -> no (open loop), 2 -> yes w/o
                      !   rear steer effect
OPT_ECHO_ALL_PARS   0 ! List all parameters that might be used? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ANI_LIVE   0 ! Echo variables sent live to RT animators? 0 -> no, 1 ->
                      !   yes
OPT_ECHO_ICS        0 ! Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_WRITE      0 ! Echo written outputs? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    1 ! Show interactive dialog box if fatal error occurs: 1 ->
                      !   yes (normal use), 0 -> no (for batch runs)
OPT_EVENT_TIME      0 ! Restart clock with new event? 0 -> No, 1 -> Yes
OPT_INIT_CONFIG     1 ! Initialize vehicle pitch, roll, and deflection variables?
                      !   1 -> yes, 0 -> no, start 'as is'
OPT_INIT_ROAD       1 ! Initialize variables for vehicle yaw, Xo, and Yo, to match
                      !   road at station = SSTART? 1 -> yes, 0 -> no, start 'as
                      !   is'
OPT_INIT_SPEED      1 ! Initialize vehicle speed variables? 1 -> yes, 0 -> no,
                      !   start 'as is'
OPT_INT_METHOD      2 ! Numerical integration method (fixed half-step except
                      !   AB-2): 2 -> AM-2; 3 -> AM-3; 4 = AM-4; 0 -> AB-2
                      !   (full-step); 1 = RK-2
OPT_IO_UPDATE       1 ! Communicate import and output variables whenever possible?
                      !   1 -> communicate twice per time step, 0 -> only at
                      !   indicated time step
OPT_LOG_DEBUG       0 ! Save/reopen log file for debugging? 0 -> no, 1 -> yes
OPT_LOG_VERBOSE     2 ! Log file verbosity: 2 -> everything, 0 -> errors only, 1
                      !   -> errors + events
OPT_LOG_WARNINGS    0 ! Write warnings into log file? 0 -> no, 1 -> yes
OPT_PAUSE           0 ! Pause at end of run to keep window open? 0 = no, 1 = yes.
OPT_PT              1 ! Powertrain type: 0 -> Simple, 1 -> FWD, 2 -> RWD, 3 -> AWD
OPT_ROAD            1 ! Which 3D ground model? 1 -> 3D road, 0 -> 3D grid
OPT_ROAD_LOOP       0 ! Is the road/XY-path in a loop? 0 -> no, 1 -> yes
OPT_ROLL_MAX       80 ! Maximum roll angle: run stops if reached (deg)
OPT_SC              2 ! Speed control: 0 -> None, 1 -> constant, 2 -> speed vs.
                      !   time, 3 -> speed vs. station
OPT_SENSOR          0 ! Use driver preview points (for custom driver control)?  0
                      !   -> no, 1 -> yes
OPT_SORT_ANI_LIVE   0 ! Put live animation outputs in native order? 0 -> as
                      !   entered, 1 -> native order
OPT_SORT_WRITE      1 ! Put written outputs in native order? 1 -> native order, 0
                      !   -> as entered
OPT_SSTOP           1 ! Stop when the vehicle reaches SSTOP? 0 (default) -> no
                      !   (use SSTOP only to initialize the direction of travel
                      !   relative to SSTART), -1 -> Run forever until some
                      !   user-defined condition (e.g., events), 1 -> yes, stop
                      !   when SSTOP is reached.
OPT_STEER_DEF       1 ! Define steer angles: 1 -> with respect to vehicle X-Y
                      !   plane, 0 -> as rotation angle about steer axis.
OPT_VMIN           -1 ! Minimum absolute vehicle speed: run stops if reached
                      !   (km/h)
OPT_WRITE           1 ! Write outputs to file or buffer when T > TSTART_WRITE?
                      !   (Update this using events or VS commands.)  1 -> write,
                      !   0 -> don't write (-)
SSTART              0 ! Location of vehicle on road (station) at start of run (m)
SSTOP             210 ! Head in this direction and stop here if OPT_SSTOP = 1 (m)
TSTART              0 ! Start with the clock set at this time (s)
TSTART_WRITE        0 ! Start writing outputs when this time is reached (s)
TSTEP  0.001000000047 ! Time step for numerical integration (s)
TSTOP              10 ! Stop when this time is reached (s)

!-----------------------------------------------------------------------------------
! MODEL PARAMETERS
!-----------------------------------------------------------------------------------
OPT_CLUTCH          0 ! Torque transfer to transmission: 0 -> hydraulic torque
                      !   converter, 1 -> mechanical clutch, 2 -> torque
                      !   converter with lock-up clutch
OPT_CLUTCH_DIFF(1)  0 ! Clutch control option for front differential: 0 -> table
                      !   lookup or external, 1 -> Torsen parameters, 2 -> yaw
                      !   control
OPT_DIFF_INTERNAL(1) 1 ! Model option for front differential: 1 -> internal model,
                       !   0 -> external model
OPT_ENGINE_INTERNAL 1 ! Model option for engine: 1 -> internal model, 0 ->
                      !   external model
OPT_EXT_SP(1,1)     0 ! External spring option for L1 spring: 0 -> include
                      !   internal spring (with or without external model), 1 ->
                      !   no internal spring (external model only)
OPT_EXT_SP(1,2)     0 ! External spring option for R1 spring
OPT_EXT_SP(2,1)     0 ! External spring option for L2 spring
OPT_EXT_SP(2,2)     0 ! External spring option for R2 spring
OPT_JNC_DESIGN(1)   1 ! Specify jounce in the vehicle design condition for axle 1?
                      !   0 -> no, base jounce on suspension springs, 1 -> yes
OPT_JNC_DESIGN(2)   1 ! Specify jounce in the vehicle design condition for axle 2?
OPT_LOCKED_DIFF(1)  0 ! Is the front differential locked? 0 -> no, 1 -> yes
OPT_M_SW_CALC       1 ! Steering torque: 0 = from table, 1 = calculated (See
                      !   Reference Manual for details)
OPT_POWER           1 ! Power steering? 0 = No, 1= Yes
OPT_PWR_CPL_INTERNAL 1 ! Model option for internal power coupling (torque
                       !   converter and clutch): 1 -> use internal model, 0 ->
                       !   use external model
OPT_RACK(1)         1 ! Steering gear type for axle 1? 0 = Recirculating ball, 1 =
                      !   Rack and pinion
OPT_RACK(2)         1 ! Steering gear type for axle 2? 0 = Recirculating ball, 1 =
                      !   Rack and pinion
OPT_SHIFT_INTERNAL  1 ! Model option for gear shift command: 1 -> internal model,
                      !   0 -> external model
OPT_STEER           0 ! Steer input? 0 = Angle, 1 = Torque
OPT_THROTTLE_DELAY  0 ! Use throttle time constants: 0 -> no, 1 -> yes
OPT_TIRE_MODEL(1,1) 1 ! Internal tire shear-model option for tire L1: 1 ->
                      !   built-in model, 0 -> fully external model, 2 -> bult-in
                      !   lags 3 -> built-in for Fx, My, and lags, 6 -> built-in
                      !   with camber extensions, 7 -> Pacejka 5.2, 8 -> TNO
                      !   Delft-Tyre, 9 -> COSIN FTire
OPT_TIRE_MODEL(1,2) 1 ! Internal tire shear-model option for tire R1
OPT_TIRE_MODEL(2,1) 1 ! Internal tire shear-model option for tire L2
OPT_TIRE_MODEL(2,2) 1 ! Internal tire shear-model option for tire R2
OPT_TIRE_NO_LAG     0 ! Option for high-speed when relaxation length is unstable:
                      !   0 -> increase relaxation length; 1 -> use instant slip
OPT_TRANS_INTERNAL  1 ! Model option for transmission: 1 -> internal model, 0 ->
                      !   external model
OPT_TR_GEAR_INTERNAL 1 ! Model option for transmission gear ratio and inertia: 1
                       !   -> internal model, 0 -> external model
OPT_TWIN_CLUTCH(1)  0 ! Does the front axle differential have twin clutches? 0 ->
                      !   no, 1 -> yes
ABS_SLIP_OFF(1) 0.200000003 ! Axle 1 ABS: release brake for slip above this level
                            !   (-)
ABS_SLIP_OFF(2) 0.200000003 ! Axle 2 ABS: release brake for slip above this level
                            !   (-)
ABS_SLIP_ON(1) 0.150000006 ! Axle 1 ABS: apply brake for slip below this level (-)
ABS_SLIP_ON(2) 0.150000006 ! Axle 2 ABS: apply brake for slip below this level (-)
ABS_VMIN(1)     10000 ! Axle 1 ABS: disable ABS for speed below this level (km/h)
ABS_VMIN(2)     10000 ! Axle 2 ABS: disable ABS for speed below this level (km/h)
AREA_AERO 1.600000024 ! Frontal vehicle cross-section area (for aerodynamics) (m2)
AV_ENG_IDLE       750 ! Engine idle speed (rpm)
AV_SW_MAX_DM     1200 ! Limit steering wheel rate for driver model (deg/s)
A_CAMBER(1,1)       0 ! Static camber angle for L wheel, axle 1 (deg)
A_CAMBER(1,2)       0 ! Static camber angle for R wheel, axle 1 (deg)
A_CAMBER(2,1)       0 ! Static camber angle for L wheel, axle 2 (deg)
A_CAMBER(2,2)       0 ! Static camber angle for R wheel, axle 2 (deg)
A_CASTER(1,1) 3.000056028 ! Caster for L wheel, axle 1 (deg)
A_CASTER(1,2) 3.000056028 ! Caster for R wheel, axle 1 (deg)
A_CASTER(2,1)       0 ! Caster for L wheel, axle 2 (deg)
A_CASTER(2,2)       0 ! Caster for R wheel, axle 2 (deg)
A_KPI(1,1) 13.76029968 ! Kingpin inclination for L wheel, axle 1 (deg)
A_KPI(1,2) 13.76029968 ! Kingpin inclination for R wheel, axle 1 (deg)
A_KPI(2,1)          0 ! Kingpin inclination for L wheel, axle 2 (deg)
A_KPI(2,2)          0 ! Kingpin inclination for R wheel, axle 2 (deg)
A_MZ_BETA(1,1) 0.1000000015 ! Ref. hysteretic angle for parking steer torque L1
                            !   (deg)
A_MZ_BETA(1,2) 0.1000000015 ! Ref. hysteretic angle for parking steer torque R1
                            !   (deg)
A_MZ_BETA(2,1)      2 ! Ref. hysteretic angle for parking steer torque L2 (deg)
A_MZ_BETA(2,2)      2 ! Ref. hysteretic angle for parking steer torque R2 (deg)
A_PITCH_S(1)        0 ! Local static pitch of sm sensor 1 (deg)
A_PITCH_S(2)        0 ! Local static pitch of sm sensor 2 (deg)
A_PITCH_S(3)        0 ! Local static pitch of sm sensor 3 (deg)
A_PITCH_S(4)        0 ! Local static pitch of sm sensor 4 (deg)
A_PITCH_S(5)        0 ! Local static pitch of sm sensor 5 (deg)
A_PITCH_S(6)        0 ! Local static pitch of sm sensor 6 (deg)
A_ROLL_S(1)         0 ! Local static roll of sm sensor 1 (deg)
A_ROLL_S(2)         0 ! Local static roll of sm sensor 2 (deg)
A_ROLL_S(3)         0 ! Local static roll of sm sensor 3 (deg)
A_ROLL_S(4)         0 ! Local static roll of sm sensor 4 (deg)
A_ROLL_S(5)         0 ! Local static roll of sm sensor 5 (deg)
A_ROLL_S(6)         0 ! Local static roll of sm sensor 6 (deg)
A_SW_MAX_DM       720 ! Limit steering wheel angle for driver model (deg)
A_TOE(1,1)          0 ! Static toe angle for L wheel, axle 1 (deg)
A_TOE(1,2)          0 ! Static toe angle for R wheel, axle 1 (deg)
A_TOE(2,1)          0 ! Static toe angle for L wheel, axle 2 (deg)
A_TOE(2,2)          0 ! Static toe angle for R wheel, axle 2 (deg)
A_YAW_S(1)          0 ! Local static yaw of sm sensor 1 (deg)
A_YAW_S(2)          0 ! Local static yaw of sm sensor 2 (deg)
A_YAW_S(3)          0 ! Local static yaw of sm sensor 3 (deg)
A_YAW_S(4)          0 ! Local static yaw of sm sensor 4 (deg)
A_YAW_S(5)          0 ! Local static yaw of sm sensor 5 (deg)
A_YAW_S(6)          0 ! Local static yaw of sm sensor 6 (deg)
BETA_COL            2 ! Ref hysteretic angle for steering column friction torque
                      !   (deg)
CMP_OFFSET(1,1)     0 ! Initial compression of L external spring (mm)
CMP_OFFSET(1,2)     0 ! Initial compression of R external spring (mm)
CMP_OFFSET(2,1)     0 ! Initial compression of L external spring (mm)
CMP_OFFSET(2,2)     0 ! Initial compression of R external spring (mm)
DAUX(1)             0 ! Axle 1 auxiliary roll damping (N-m/deg/s)
DAUX(2)             0 ! Axle 2 auxiliary roll damping (N-m/deg/s)
DRIVELINE_FREQ      9 ! Natural frequency of entire driveline, including
                      !   transmission, differentials, and wheels, not including
                      !   engine. (Hz)
DRIVELINE_ZETA 0.8999999762 ! Damping ratio of entire driveline, including
                            !   transmission, differentials, and wheels, not
                            !   including engine. (-)
DZ_SHADOW 0.01999999955 ! Height of animator shadow above road (to avoid
                        !   flickering) (m)
D_AIR      1.20599997 ! Air mass density (kg/m3)
D_COL   0.02500000037 ! Steering column viscous damping (N-m/deg/s)
D_RACK(1)          30 ! Steering rack viscous damping for axle 1 (N/mm/s)
D_RACK(2)           0 ! Steering rack viscous damping for axle 2 (N/mm/s)
ENGINE_STALL_DAMP   1 ! Damping coefficient of the stalled engine (N-m-s/deg)
FLAG_1              0 ! Auxiliary flag variable for output #1 (-)
FLAG_10           248 ! Auxiliary flag variable for output #10 (-)
FLAG_2              0 ! Auxiliary flag variable for output #2 (-)
FLAG_3              0 ! Auxiliary flag variable for output #3 (-)
FLAG_4              0 ! Auxiliary flag variable for output #4 (-)
FLAG_5              0 ! Auxiliary flag variable for output #5 (-)
FLAG_6              0 ! Auxiliary flag variable for output #6 (-)
FLAG_7              0 ! Auxiliary flag variable for output #7 (-)
FLAG_8              0 ! Auxiliary flag variable for output #8 (-)
FLAG_9              0 ! Auxiliary flag variable for output #9 (-)
FS_OFFSET(1,1)      0 ! Force offset added to static load for L1 spring (N)
FS_OFFSET(1,2)      0 ! Force offset added to static load for R1 spring (N)
FS_OFFSET(2,1)      0 ! Force offset added to static load for L2 spring (N)
FS_OFFSET(2,2)      0 ! Force offset added to static load for R2 spring (N)
FZ_MAX(1,1)    100000 ! Vertical force limit for tire L1 (N)
FZ_MAX(1,2)    100000 ! Vertical force limit for tire R1 (N)
FZ_MAX(2,1)    100000 ! Vertical force limit for tire L2 (N)
FZ_MAX(2,2)    100000 ! Vertical force limit for tire R2 (N)
HYS_COL           1.5 ! Steering column friction torque (N-m)
H_CG_PL(1)       1500 ! Height (Z coord.) of CG of payload 1 (mm)
H_CG_PL(2)       1500 ! Height (Z coord.) of CG of payload 2 (mm)
H_CG_PL(3)       1500 ! Height (Z coord.) of CG of payload 3 (mm)
H_CG_PL(4)       1500 ! Height (Z coord.) of CG of payload 4 (mm)
H_CG_SU           540 ! Height (Z coord.) of vehicle unladen sprung mass CG (mm)
H_REF_AERO          0 ! Height (Z coord.) of aerodynamic ref. pt. (mm)
H_RP(1)             0 ! Height (Z coord.) of sm ref point 1 (mm)
H_RP(10)            0 ! Height (Z coord.) of sm ref point 10 (mm)
H_RP(2)             0 ! Height (Z coord.) of sm ref point 2 (mm)
H_RP(3)             0 ! Height (Z coord.) of sm ref point 3 (mm)
H_RP(4)             0 ! Height (Z coord.) of sm ref point 4 (mm)
H_RP(5)             0 ! Height (Z coord.) of sm ref point 5 (mm)
H_RP(6)             0 ! Height (Z coord.) of sm ref point 6 (mm)
H_RP(7)             0 ! Height (Z coord.) of sm ref point 7 (mm)
H_RP(8)             0 ! Height (Z coord.) of sm ref point 8 (mm)
H_RP(9)             0 ! Height (Z coord.) of sm ref point 9 (mm)
H_S(1)              0 ! Height (Z coord.) of SM sensor 1 (mm)
H_S(2)              0 ! Height (Z coord.) of SM sensor 2 (mm)
H_S(3)              0 ! Height (Z coord.) of SM sensor 3 (mm)
H_S(4)              0 ! Height (Z coord.) of SM sensor 4 (mm)
H_S(5)              0 ! Height (Z coord.) of SM sensor 5 (mm)
H_S(6)              0 ! Height (Z coord.) of SM sensor 6 (mm)
H_WC(1,1)         316 ! Height (Z coord.) of wheel center of L1 (mm)
H_WC(1,2)         316 ! Height (Z coord.) of wheel center of R1 (mm)
H_WC(2,1)         316 ! Height (Z coord.) of wheel center of L2 (mm)
H_WC(2,2)         316 ! Height (Z coord.) of wheel center of R2 (mm)
IDS(1)  0.01300000027 ! Spin inertia of front driveshaft (kg-m2)
IENG     0.1599999964 ! Spin inertia of engine crankshaft (kg-m2)
IHS_L(1) 0.008999999613 ! Spin inertia of half left shaft, front differential
                        !   (kg-m2)
IHS_R(1) 0.008999999613 ! Spin inertia of half right shaft, front differential
                        !   (kg-m2)
IT(1,1)             0 ! Spin inertia for tire L1 (kg-m2)
IT(1,2)             0 ! Spin inertia for tire R1 (kg-m2)
IT(2,1)             0 ! Spin inertia for tire L2 (kg-m2)
IT(2,2)             0 ! Spin inertia for tire R2 (kg-m2)
ITC_INPUT_SHAFT 0.01499999966 ! Spin inertia of input shaft of torque converter
                              !   (kg-m2)
ITC_OUTPUT_SHAFT 0.01499999966 ! Spin inertia of torque converter output shaft
                               !   (kg-m2)
ITR(1)   0.3700000048 ! 1st-gear transmission spin inertia at output shaft.
                      !   (Transmission spin inertias do not include the torque
                      !   converter.) (kg-m2)
ITR(2)   0.3400000036 ! 2nd-gear trans. spin inertia at output shaft (kg-m2)
ITR(3)   0.4199999869 ! 3rd-gear trans. spin inertia at output shaft (kg-m2)
ITR(4)    0.400000006 ! 4th-gear trans. spin inertia at output shaft (kg-m2)
ITR(5)    0.400000006 ! 5th-gear trans. spin inertia at output shaft (kg-m2)
ITR(6)    0.400000006 ! 6th-gear trans. spin inertia at output shaft (kg-m2)
ITR_NEUTRAL 0.3400000036 ! Neutral-gear spin inertia of transmission (kg-m2)
ITR_REVERSE 0.3400000036 ! Reverse-gear spin inertia of transmission (kg-m2)
IW(1,1)  0.8999999762 ! Spin inertia for wheel L1 (kg-m2)
IW(1,2)  0.8999999762 ! Spin inertia for wheel R1 (kg-m2)
IW(2,1)  0.8999999762 ! Spin inertia for wheel L2 (kg-m2)
IW(2,2)  0.8999999762 ! Spin inertia for wheel R2 (kg-m2)
IXX_PL(1)           0 ! Roll moment of inertia of payload 1 (kg-m2)
IXX_PL(2)           0 ! Roll moment of inertia of payload 2 (kg-m2)
IXX_PL(3)           0 ! Roll moment of inertia of payload 3 (kg-m2)
IXX_PL(4)           0 ! Roll moment of inertia of payload 4 (kg-m2)
IXX_SU    606.0999756 ! Roll inertia of vehicle unladen sprung mass (kg-m2)
IXY_PL(1)           0 ! XY product of inertia of payload 1 (kg-m2)
IXY_PL(2)           0 ! XY product of inertia of payload 2 (kg-m2)
IXY_PL(3)           0 ! XY product of inertia of payload 3 (kg-m2)
IXY_PL(4)           0 ! XY product of inertia of payload 4 (kg-m2)
IXY_SU              0 ! XY inertia of vehicle unladen sprung mass (kg-m2)
IXZ_PL(1)           0 ! XZ product of inertia of payload 1 (kg-m2)
IXZ_PL(2)           0 ! XZ product of inertia of payload 2 (kg-m2)
IXZ_PL(3)           0 ! XZ product of inertia of payload 3 (kg-m2)
IXZ_PL(4)           0 ! XZ product of inertia of payload 4 (kg-m2)
IXZ_SU              0 ! XZ inertia of vehicle unladen sprung mass (kg-m2)
IYY_PL(1)           0 ! Pitch moment of inertia of payload 1 (kg-m2)
IYY_PL(2)           0 ! Pitch moment of inertia of payload 2 (kg-m2)
IYY_PL(3)           0 ! Pitch moment of inertia of payload 3 (kg-m2)
IYY_PL(4)           0 ! Pitch moment of inertia of payload 4 (kg-m2)
IYY_SU           1523 ! Pitch inertia of vehicle unladen sprung mass (kg-m2)
IYZ_PL(1)           0 ! YZ product of inertia of payload 1 (kg-m2)
IYZ_PL(2)           0 ! YZ product of inertia of payload 2 (kg-m2)
IYZ_PL(3)           0 ! YZ product of inertia of payload 3 (kg-m2)
IYZ_PL(4)           0 ! YZ product of inertia of payload 4 (kg-m2)
IYZ_SU              0 ! YZ inertia of vehicle unladen sprung mass (kg-m2)
IZZ_PL(1)           0 ! Yaw moment of inertia of payload 1 (kg-m2)
IZZ_PL(2)           0 ! Yaw moment of inertia of payload 2 (kg-m2)
IZZ_PL(3)           0 ! Yaw moment of inertia of payload 3 (kg-m2)
IZZ_PL(4)           0 ! Yaw moment of inertia of payload 4 (kg-m2)
IZZ_SU           1523 ! Yaw inertia of vehicle unladen sprung mass (kg-m2)
I_COL    0.1000000015 ! Steering column inertia (kg-m2)
I_GEAR_IN 0.009999999776 ! Steering gear inertia (kg-m2)
JNC_DESIGN(1,1)     0 ! Jounce of axle 1 in the vehicle design condition (mm)
JNC_DESIGN(1,2)     0 ! Jounce of axle 1 in the vehicle design condition (mm)
JNC_DESIGN(2,1)     0 ! Jounce of axle 2 in the vehicle design condition (mm)
JNC_DESIGN(2,2)     0 ! Jounce of axle 2 in the vehicle design condition (mm)
LOCKED_DIFF_DAMP(1) 1 ! Torsional damping constant for locking front differential
                      !   (N-m-s/deg)
LOCKED_DIFF_K(1)  100 ! Torsional spring constant for locking front differential
                      !   (N-m/deg)
LOCK_BK_R_FREQ     33 ! Ratio: simulation update frequency (1/dt) divided by
                      !   natural torsional frequency of wheels during brake
                      !   lockup (-)
LOCK_BK_ZETA        2 ! Torsional damping ratio of wheels during brake lockup (-)
LX_AXLE(1)          0 ! X distance axle 1 is behind vehicle origin (mm)
LX_AXLE(2)       2578 ! X distance axle 2 is behind vehicle origin (mm)
LX_CG_PL(1)      2000 ! X distance CG of payload 1 is behind vehicle origin (mm)
LX_CG_PL(2)      2000 ! X distance CG of payload 2 is behind vehicle origin (mm)
LX_CG_PL(3)      2000 ! X distance CG of payload 3 is behind vehicle origin (mm)
LX_CG_PL(4)      2000 ! X distance CG of payload 4 is behind vehicle origin (mm)
LX_CG_SU  1016.000061 ! X dist. CG of vehicle unladen sprung mass is behind
                      !   vehicle origin (mm)
LX_DRVSEN(1)        0 ! Lead distance to driver preview point #1 (m)
LX_DRVSEN(2)        0 ! Lead distance to driver preview point #2 (m)
LX_DRVSEN(3)        0 ! Lead distance to driver preview point #3 (m)
LX_DRVSEN(4)        0 ! Lead distance to driver preview point #4 (m)
LX_DRVSEN(5)        0 ! Lead distance to driver preview point #5 (m)
L_CAMERA_FRONT     10 ! Distance the camera front point leads the front axle (m)
L_CAMERA_REAR       2 ! Distance the camera rear point trails the front axle (m)
L_KPO(1,1) 75.39980316 ! Lateral kingpin offset at center of L wheel, axle 1 (mm)
L_KPO(1,2) 75.39980316 ! Lateral kingpin offset at center of R wheel, axle 1 (mm)
L_KPO(2,1)          0 ! Lateral kingpin offset at center of L wheel, axle 2 (mm)
L_KPO(2,2)          0 ! Lateral kingpin offset at center of R wheel, axle 2 (mm)
L_LCA(1,1)        600 ! Length of L1 lower control arm (used to define roll for
                      !   animation) (mm)
L_LCA(1,2)        600 ! Length of R1 lower control arm (mm)
L_LCA(2,1)        600 ! Length of L2 lower control arm (mm)
L_LCA(2,2)        600 ! Length of R2 lower control arm (mm)
L_REF_AERO       2578 ! Aerodynamic reference length for vehicle (mm)
L_RELAX_X(1,1)     55 ! Longitudinal relaxation length for tire L1 (mm)
L_RELAX_X(1,2)     55 ! Longitudinal relaxation length for tire R1 (mm)
L_RELAX_X(2,1)     55 ! Longitudinal relaxation length for tire L2 (mm)
L_RELAX_X(2,2)     55 ! Longitudinal relaxation length for tire R2 (mm)
L_RELAX_Y(1,1)    565 ! Lateral relaxation length for tire L1 (mm)
L_RELAX_Y(1,2)    565 ! Lateral relaxation length for tire R1 (mm)
L_RELAX_Y(2,1)    565 ! Lateral relaxation length for tire L2 (mm)
L_RELAX_Y(2,2)    565 ! Lateral relaxation length for tire R2 (mm)
L_SPG_ADJ(1,1)      0 ! Upper spring seat height adj. for L1 spring (mm)
L_SPG_ADJ(1,2)      0 ! Upper spring seat height adj. for R1 spring (mm)
L_SPG_ADJ(2,1)      0 ! Upper spring seat height adj. for L2 spring (mm)
L_SPG_ADJ(2,2)      0 ! Upper spring seat height adj. for R2 spring (mm)
L_TRACK(1)       1539 ! Track width for axle 1 (mm)
L_TRACK(2)       1539 ! Track width for axle 2 (mm)
MU_REF_X(1,1)       1 ! Ground friction during meas. of Fx data for tire L1 (-)
MU_REF_X(1,2)       1 ! Ground friction during meas. of Fx data for tire R1 (-)
MU_REF_X(2,1)       1 ! Ground friction during meas. of Fx data for tire L2 (-)
MU_REF_X(2,2)       1 ! Ground friction during meas. of Fx data for tire R2 (-)
MU_REF_Y(1,1)       1 ! Ground friction during meas. of Fy data for tire L1 (-)
MU_REF_Y(1,2)       1 ! Ground friction during meas. of Fy data for tire R1 (-)
MU_REF_Y(2,1)       1 ! Ground friction during meas. of Fy data for tire L2 (-)
MU_REF_Y(2,2)       1 ! Ground friction during meas. of Fy data for tire R2 (-)
M_PL(1)             0 ! Mass of payload 1 (kg)
M_PL(2)             0 ! Mass of payload 2 (kg)
M_PL(3)             0 ! Mass of payload 3 (kg)
M_PL(4)             0 ! Mass of payload 4 (kg)
M_SU             1274 ! Mass of vehicle unladen sprung mass (kg)
M_US(1)            71 ! Unsprung mass of axle 1 (kg)
M_US(2)            71 ! Unsprung mass of axle 2 (kg)
R0(1,1)           316 ! Free (unloaded) radius for tire L1 (mm)
R0(1,2)           316 ! Free (unloaded) radius for tire R1 (mm)
R0(2,1)           316 ! Free (unloaded) radius for tire L2 (mm)
R0(2,2)           316 ! Free (unloaded) radius for tire R2 (mm)
RRE(1,1)          310 ! Effective rolling radius (Vx/AVy) for tire L1 (mm)
RRE(1,2)          310 ! Effective rolling radius (Vx/AVy) for tire R1 (mm)
RRE(2,1)          310 ! Effective rolling radius (Vx/AVy) for tire L2 (mm)
RRE(2,2)          310 ! Effective rolling radius (Vx/AVy) for tire R2 (mm)
RR_C(1,1) 0.00400000019 ! Rolling-resistance coefficient for tire L1: Fx_rr =
                        !   Fz*RR_surf*(RR_c + RR_v*Vx) (-)
RR_C(1,2) 0.00400000019 ! Rolling-resistance coefficient for tire R1 (-)
RR_C(2,1) 0.00400000019 ! Rolling-resistance coefficient for tire L2 (-)
RR_C(2,2) 0.00400000019 ! Rolling-resistance coefficient for tire R2 (-)
RR_FX(1,1)          1 ! Rolling-resistance fx coefficient for tire L1: My_rr_fx =
                      !   -1 * Fx * (rre - (r_free - Fz * kt)) (-)
RR_FX(1,2)          1 ! Rolling-resistance fx coefficient for tire R1 (-)
RR_FX(2,1)          1 ! Rolling-resistance fx coefficient for tire L2 (-)
RR_FX(2,2)          1 ! Rolling-resistance fx coefficient for tire R2 (-)
RR_SURF             1 ! Rolling resistance surface-effect coefficient (-)
RR_V(1,1) 2.500000119e-005 ! Rolling-res. speed coefficient for tire L1: Fx_rr =
                           !   Fz*RR_surf*(RR_c + RR_v*Vx) (h/km)
RR_V(1,2) 2.500000119e-005 ! Rolling-res. speed coefficient for tire R1 (h/km)
RR_V(2,1) 2.500000119e-005 ! Rolling-res. speed coefficient for tire L2 (h/km)
RR_V(2,2) 2.500000119e-005 ! Rolling-res. speed coefficient for tire R2 (h/km)
R_EFF_F_DIFF(1) 0.9900000095 ! Forward efficiency of front differential (-)
R_EFF_R_DIFF(1) 0.9900000095 ! Reverse efficiency of front differential (-)
R_EFF_TR_F(1) 0.9200000167 ! 1st-gear forward efficiency of transmission (-)
R_EFF_TR_F(2) 0.9200000167 ! 2nd-gear forward efficiency of transmission (-)
R_EFF_TR_F(3) 0.9499999881 ! 3rd-gear forward efficiency of transmission (-)
R_EFF_TR_F(4) 0.9499999881 ! 4th-gear forward efficiency of transmission (-)
R_EFF_TR_F(5) 0.9800000191 ! 5th-gear forward efficiency of transmission (-)
R_EFF_TR_F(6) 0.9900000095 ! 6th-gear forward efficiency of transmission (-)
R_EFF_TR_F_REVERSE 0.8999999762 ! Reverse-gear forward efficiency of transmission
                                !   (-)
R_EFF_TR_R(1) 0.9200000167 ! 1st-gear reverse efficiency of transmission (-)
R_EFF_TR_R(2) 0.9200000167 ! 2nd-gear reverse efficiency of transmission (-)
R_EFF_TR_R(3) 0.9499999881 ! 3rd-gear reverse efficiency of transmission (-)
R_EFF_TR_R(4) 0.9499999881 ! 4th-gear reverse efficiency of transmission (-)
R_EFF_TR_R(5) 0.9800000191 ! 5th-gear reverse efficiency of transmission (-)
R_EFF_TR_R(6) 0.9900000095 ! 6th-gear reverse efficiency of transmission (-)
R_EFF_TR_R_REVERSE 0.8999999762 ! Reverse-gear reverse efficiency of transmission
                                !   (-)
R_GEAR_DIFF(1) 4.099999905 ! Gear ratio of front differential (-)
R_GEAR_TR(1) 3.538000107 ! 1st-gear ratio of transmission (-)
R_GEAR_TR(2) 2.059999943 ! 2nd-gear ratio of transmission (-)
R_GEAR_TR(3) 1.404000044 ! 3rd-gear ratio of transmission (-)
R_GEAR_TR(4)        1 ! 4th-gear ratio of transmission (-)
R_GEAR_TR(5) 0.7129999995 ! 5th-gear ratio of transmission (-)
R_GEAR_TR(6) 0.5820000172 ! 6th-gear ratio of transmission (-)
R_GEAR_TR_REVERSE -3.167999983 ! Reverse-gear ratio of transmission (should be
                               !   negative) (-)
R_GRAVITY           1 ! Scale factor on acceleration of gravity (-)
R_US_STR(1) 0.8000000119 ! Steered fraction of unsprung mass of axle 1 (-)
R_US_STR(2) 0.1000000015 ! Steered fraction of unsprung mass of axle 2 (-)
SPATH               0 ! Value of station at first point in design path specified
                      !   with YIN_TABLE (m)
SPEEDO_SF           1 ! Scale factor for speedometer needle (-)
SPEED_KI 0.1599999964 ! Integral control gain for speed controller (1/m)
SPEED_KP 0.1400000006 ! Proportional control gain for speed controller (s/m)
SPRING_COMP_BETA(1,1) 2 ! Ref. hysteretic L1 spring compression (mm)
SPRING_COMP_BETA(1,2) 2 ! Ref. hysteretic R1 spring compression (mm)
SPRING_COMP_BETA(2,1) 2 ! Ref. hysteretic L2 spring compression (mm)
SPRING_COMP_BETA(2,2) 2 ! Ref. hysteretic R2 spring compression (mm)
SPRING_EXT_BETA(1,1) 2 ! Ref. hysteretic L1 spring extension (mm)
SPRING_EXT_BETA(1,2) 2 ! Ref. hysteretic R1 spring extension (mm)
SPRING_EXT_BETA(2,1) 2 ! Ref. hysteretic L2 spring extension (mm)
SPRING_EXT_BETA(2,2) 2 ! Ref. hysteretic R2 spring extension (mm)
TACH_SF             1 ! Scale factor for tachometer needle (-)
TBAR                2 ! Torsion bar stiffness (N-m/deg)
TC_BK(1,1) 0.05999999866 ! Time constant for L1 brake actuator (s)
TC_BK(1,2) 0.05999999866 ! Time constant for R1 brake actuator (s)
TC_BK(2,1) 0.05999999866 ! Time constant for L2 brake actuator (s)
TC_BK(2,2) 0.05999999866 ! Time constant for R2 brake actuator (s)
TC_BOOST(1) 0.07999999821 ! Time constant for axle 1 power steering boost (s)
TC_BOOST(2) 0.3000000119 ! Time constant for axle 2 power steering boost (s)
TLAG_BK(1,1)        0 ! Transport time delay for fluid to reach L1 brake (s)
TLAG_BK(1,2)        0 ! Transport time delay for fluid to reach R1 brake (s)
TLAG_BK(2,1)        0 ! Transport time delay for fluid to reach L2 brake (s)
TLAG_BK(2,2)        0 ! Transport time delay for fluid to reach R2 brake (s)
TLAG_DM             0 ! Lag time used by driver model (s)
TSTART_BRAKES       0 ! Time for starting brake control tables. (s)
TSTART_GEAR         0 ! Time for starting gear shift control table (s)
TSTART_SPEED_CTRL   0 ! Time for starting table for speed control (s)
TSTART_THROTTLE     0 ! Time for starting engine throttle control table (s)
TSTART_TRANS        0 ! Time for starting transmission mode control table (s)
TSTART_WIND         0 ! Time for starting wind-related tables (s)
T_SHIFT          0.25 ! Shift duration in automatic transmission (s)
VLOW_ALPHA(1,1)     5 ! Min. speed for full lat. relaxation for tire L1 (km/h)
VLOW_ALPHA(1,2)     5 ! Min. speed for full lat. relaxation for tire R1 (km/h)
VLOW_ALPHA(2,1)     5 ! Min. speed for full lat. relaxation for tire L2 (km/h)
VLOW_ALPHA(2,2)     5 ! Min. speed for full lat. relaxation for tire R2 (km/h)
VLOW_DIFF_CL_LOCK(1) 0.4799999893 ! Lock the differential clutch when the speed
                                  !   differential is below this speed, or the
                                  !   clutch capacity is bigger than the
                                  !   theoretical locked torque. (1st drive axle)
                                  !   (rpm)
VLOW_DRIVER        10 ! Speed for switching the driver steering controller from
                      !   time preview to distance preview with no speed
                      !   sensitivity (km/h)
X_KPO(1,1)          0 ! X coord. of kingpin at center of L wheel, axle 1 (mm)
X_KPO(1,2)          0 ! X coord. of kingpin at center of R wheel, axle 1 (mm)
X_KPO(2,1)          0 ! X coord. of kingpin at center of L wheel, axle 2 (mm)
X_KPO(2,2)          0 ! X coord. of kingpin at center of R wheel, axle 2 (mm)
X_REF_AERO      -1289 ! X coord. of aerodynamic ref. pt. (mm)
X_RP(1)             0 ! X coord. of sm ref point 1 (mm)
X_RP(10)            0 ! X coord. of sm ref point 10 (mm)
X_RP(2)             0 ! X coord. of sm ref point 2 (mm)
X_RP(3)             0 ! X coord. of sm ref point 3 (mm)
X_RP(4)             0 ! X coord. of sm ref point 4 (mm)
X_RP(5)             0 ! X coord. of sm ref point 5 (mm)
X_RP(6)             0 ! X coord. of sm ref point 6 (mm)
X_RP(7)             0 ! X coord. of sm ref point 7 (mm)
X_RP(8)             0 ! X coord. of sm ref point 8 (mm)
X_RP(9)             0 ! X coord. of sm ref point 9 (mm)
X_S(1)              0 ! X coord. of SM sensor 1 (mm)
X_S(2)              0 ! X coord. of SM sensor 2 (mm)
X_S(3)              0 ! X coord. of SM sensor 3 (mm)
X_S(4)              0 ! X coord. of SM sensor 4 (mm)
X_S(5)              0 ! X coord. of SM sensor 5 (mm)
X_S(6)              0 ! X coord. of SM sensor 6 (mm)
Y_CG_PL(1)          0 ! Y coordinate of CG of payload 1 (mm)
Y_CG_PL(2)          0 ! Y coordinate of CG of payload 2 (mm)
Y_CG_PL(3)          0 ! Y coordinate of CG of payload 3 (mm)
Y_CG_PL(4)          0 ! Y coordinate of CG of payload 4 (mm)
Y_CG_SU             0 ! Y coordinate of vehicle unladen sprung mass CG (mm)
Y_CL_SUSP(1)        0 ! Y coord. of centerline of axle 1 (mm)
Y_CL_SUSP(2)        0 ! Y coord. of centerline of axle 2 (mm)
Y_REF_AERO          0 ! Y coord. of aerodynamic ref. pt. (mm)
Y_RP(1)             0 ! Y coord. of sm ref point 1 (mm)
Y_RP(10)            0 ! Y coord. of sm ref point 10 (mm)
Y_RP(2)             0 ! Y coord. of sm ref point 2 (mm)
Y_RP(3)             0 ! Y coord. of sm ref point 3 (mm)
Y_RP(4)             0 ! Y coord. of sm ref point 4 (mm)
Y_RP(5)             0 ! Y coord. of sm ref point 5 (mm)
Y_RP(6)             0 ! Y coord. of sm ref point 6 (mm)
Y_RP(7)             0 ! Y coord. of sm ref point 7 (mm)
Y_RP(8)             0 ! Y coord. of sm ref point 8 (mm)
Y_RP(9)             0 ! Y coord. of sm ref point 9 (mm)
Y_S(1)              0 ! Y coord. of SM sensor 1 (mm)
Y_S(2)              0 ! Y coord. of SM sensor 2 (mm)
Y_S(3)              0 ! Y coord. of SM sensor 3 (mm)
Y_S(4)              0 ! Y coord. of SM sensor 4 (mm)
Y_S(5)              0 ! Y coord. of SM sensor 5 (mm)
Y_S(6)              0 ! Y coord. of SM sensor 6 (mm)
L_FORWARD          20 ! Distance preview point is forward of vehicle CG (m)
LAT_TRACK -1.600000024 ! Lateral offset (to driver's left) for target (m)
GAIN_STEER_CTRL    10 ! Control parameter: steering angle per meter of lateral
                      !   offset (deg/m)

!-----------------------------------------------------------------------------------
! TABULAR DATA
!-----------------------------------------------------------------------------------

! CAMBER: Suspension camber. The camber can be computed from jounce. Or, a
! linear coefficient can be multiplied by jounce. If tabular, the value can be
! transformed by a gain. A calculated value can also be given a specified offset.

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(1,1) SPLINE ! Axle 1, left side
          -70,      1.16282
          -60,     0.958695
          -50,      0.76676
          -40,      0.58725
          -30,      0.42045
          -20,     0.266701
          -10,     0.126399
            0,            0
           10,    -0.111976
           20,    -0.208942
           30,    -0.290231
           40,    -0.355097
           50,    -0.402697
           60,    -0.432083
           70,    -0.442184
ENDTABLE
CAMBER_GAIN(1,1)    1 ! Multiplier for table
CAMBER_OFFSET(1,1)  0 ! camber offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(1,2) SPLINE ! Axle 1, right side
          -70,      1.16282
          -60,     0.958695
          -50,      0.76676
          -40,      0.58725
          -30,      0.42045
          -20,     0.266701
          -10,     0.126399
            0,            0
           10,    -0.111976
           20,    -0.208942
           30,    -0.290231
           40,    -0.355097
           50,    -0.402697
           60,    -0.432083
           70,    -0.442184
ENDTABLE
CAMBER_GAIN(1,2)    1 ! Multiplier for table
CAMBER_OFFSET(1,2)  0 ! camber offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(2,1) SPLINE ! Axle 2, left side
          -70,      1.66479
          -60,      1.43877
          -50,      1.21143
          -40,     0.981031
          -30,     0.746032
          -20,     0.505036
          -10,      0.25676
            0,            0
           10,    -0.266403
           20,    -0.543604
           30,    -0.832791
           40,     -1.13524
           50,     -1.45237
           60,     -1.78583
           70,     -2.13754
ENDTABLE
CAMBER_GAIN(2,1)    1 ! Multiplier for table
CAMBER_OFFSET(2,1)  0 ! camber offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(2,2) SPLINE ! Axle 2, right side
          -70,      1.66479
          -60,      1.43877
          -50,      1.21143
          -40,     0.981031
          -30,     0.746032
          -20,     0.505036
          -10,      0.25676
            0,            0
           10,    -0.266403
           20,    -0.543604
           30,    -0.832791
           40,     -1.13524
           50,     -1.45237
           60,     -1.78583
           70,     -2.13754
ENDTABLE
CAMBER_GAIN(2,2)    1 ! Multiplier for table
CAMBER_OFFSET(2,2)  0 ! camber offset added to calculated value (after gain) (deg)

! CC_FX: Compliance: wheel camber due to in-phase Fx. The CC_FX deflection can
! be computed from force. Or, a linear coefficient can be multiplied by force. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.
CC_FX_COEFFICIENT(1,1) 0 ! Coefficient: CC_FX deflection per unit force (deg/N),
                         !   Axle 1, left side
CC_FX_GAIN(1,1)     1 ! Multiplier for table
CC_FX_OFFSET(1,1)   0 ! CC_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CC_FX_COEFFICIENT(1,2) 0 ! Coefficient: CC_FX deflection per unit force (deg/N),
                         !   Axle 1, right side
CC_FX_GAIN(1,2)     1 ! Multiplier for table
CC_FX_OFFSET(1,2)   0 ! CC_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CC_FX_COEFFICIENT(2,1) 0 ! Coefficient: CC_FX deflection per unit force (deg/N),
                         !   Axle 2, left side
CC_FX_GAIN(2,1)     1 ! Multiplier for table
CC_FX_OFFSET(2,1)   0 ! CC_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CC_FX_COEFFICIENT(2,2) 0 ! Coefficient: CC_FX deflection per unit force (deg/N),
                         !   Axle 2, right side
CC_FX_GAIN(2,2)     1 ! Multiplier for table
CC_FX_OFFSET(2,2)   0 ! CC_FX deflection offset added to calculated value (after
                      !   gain) (deg)

! CD_MY: Compliance: wheel dive due to brake MY. The CD_MY deflection can be
! computed from moment. Or, a linear coefficient can be multiplied by moment. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.
CD_MY_CONSTANT(1,1) 0 ! Constant CD_MY deflection (deg), Axle 1, left side
CD_MY_GAIN(1,1)     1 ! Multiplier for table
CD_MY_OFFSET(1,1)   0 ! CD_MY deflection offset added to calculated value (after
                      !   gain) (deg)
CD_MY_CONSTANT(1,2) 0 ! Constant CD_MY deflection (deg), Axle 1, right side
CD_MY_GAIN(1,2)     1 ! Multiplier for table
CD_MY_OFFSET(1,2)   0 ! CD_MY deflection offset added to calculated value (after
                      !   gain) (deg)
CD_MY_CONSTANT(2,1) 0 ! Constant CD_MY deflection (deg), Axle 2, left side
CD_MY_GAIN(2,1)     1 ! Multiplier for table
CD_MY_OFFSET(2,1)   0 ! CD_MY deflection offset added to calculated value (after
                      !   gain) (deg)
CD_MY_CONSTANT(2,2) 0 ! Constant CD_MY deflection (deg), Axle 2, right side
CD_MY_GAIN(2,2)     1 ! Multiplier for table
CD_MY_OFFSET(2,2)   0 ! CD_MY deflection offset added to calculated value (after
                      !   gain) (deg)

! CI_FY: Compliance: wheel inclination due to out-of-phase Fy. The CI_FY
! deflection can be computed from force. Or, a linear coefficient can be
! multiplied by force. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
CI_FY_COEFFICIENT(1,1) 0 ! Coefficient: CI_FY deflection per unit force (deg/N),
                         !   Axle 1, left side
CI_FY_GAIN(1,1)     1 ! Multiplier for table
CI_FY_OFFSET(1,1)   0 ! CI_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CI_FY_COEFFICIENT(1,2) 0 ! Coefficient: CI_FY deflection per unit force (deg/N),
                         !   Axle 1, right side
CI_FY_GAIN(1,2)     1 ! Multiplier for table
CI_FY_OFFSET(1,2)   0 ! CI_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CI_FY_COEFFICIENT(2,1) 0.0002899999963 ! Coefficient: CI_FY deflection per unit
                                       !   force (deg/N), Axle 2, left side
CI_FY_GAIN(2,1)     1 ! Multiplier for table
CI_FY_OFFSET(2,1)   0 ! CI_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CI_FY_COEFFICIENT(2,2) 0.0002899999963 ! Coefficient: CI_FY deflection per unit
                                       !   force (deg/N), Axle 2, right side
CI_FY_GAIN(2,2)     1 ! Multiplier for table
CI_FY_OFFSET(2,2)   0 ! CI_FY deflection offset added to calculated value (after
                      !   gain) (deg)

! CI_MZ: Compliance: wheel inclinaton due to out-of-phase Mz. The CI_MZ
! deflection can be computed from moment. Or, a linear coefficient can be
! multiplied by moment. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
CI_MZ_COEFFICIENT(1,1) 0 ! Coefficient: CI_MZ deflection per unit moment
                         !   (deg/N-m), Axle 1, left side
CI_MZ_GAIN(1,1)     1 ! Multiplier for table
CI_MZ_OFFSET(1,1)   0 ! CI_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CI_MZ_COEFFICIENT(1,2) 0 ! Coefficient: CI_MZ deflection per unit moment
                         !   (deg/N-m), Axle 1, right side
CI_MZ_GAIN(1,2)     1 ! Multiplier for table
CI_MZ_OFFSET(1,2)   0 ! CI_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CI_MZ_COEFFICIENT(2,1) 0 ! Coefficient: CI_MZ deflection per unit moment
                         !   (deg/N-m), Axle 2, left side
CI_MZ_GAIN(2,1)     1 ! Multiplier for table
CI_MZ_OFFSET(2,1)   0 ! CI_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CI_MZ_COEFFICIENT(2,2) 0 ! Coefficient: CI_MZ deflection per unit moment
                         !   (deg/N-m), Axle 2, right side
CI_MZ_GAIN(2,2)     1 ! Multiplier for table
CI_MZ_OFFSET(2,2)   0 ! CI_MZ deflection offset added to calculated value (after
                      !   gain) (deg)

! CLUTCH_CONTROL_DIFF: Differential clutch control input vs. total torque
! applied to both output shafts. The normalized clutch input can be computed from
! torque. Or, a linear coefficient can be multiplied by torque. If tabular, the
! value can be transformed by a gain. A calculated value can also be given a
! specified offset.
CLUTCH_CONTROL_DIFF_CONSTANT(1) 1 ! Constant normalized clutch input (-), front
                                  !   differential
CLUTCH_CONTROL_DIFF_GAIN(1) 1 ! Multiplier for table
CLUTCH_CONTROL_DIFF_OFFSET(1) 0 ! normalized clutch input offset added to
                                !   calculated value (after gain) (-)

! CLUTCH_TORQUE_DIFF: Available torque for differential clutch vs. control. The
! available torque can be computed from normalized clutch input. Or, a linear
! coefficient can be multiplied by normalized clutch input. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.
CLUTCH_TORQUE_DIFF_CONSTANT(1) 0 ! Constant available torque (N-m), front
                                 !   differential
CLUTCH_TORQUE_DIFF_GAIN(1) 1 ! Multiplier for table
CLUTCH_TORQUE_DIFF_OFFSET(1) 0 ! available torque offset added to calculated value
                               !   (after gain) (N-m)

! CMP_DAMP: Damper compression as a function of jounce. The damper compression
! can be computed from jounce. Or, a linear coefficient can be multiplied by
! jounce. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
CMP_DAMP_COEFFICIENT(1,1) 0.9649999738 ! Coefficient: damper compression per unit
                                       !   jounce (mm/mm), Axle 1, left side
CMP_DAMP_GAIN(1,1)  1 ! Multiplier for table
CMP_DAMP_OFFSET(1,1) 0 ! damper compression offset added to calculated value
                       !   (after gain) (mm)
CMP_DAMP_COEFFICIENT(1,2) 0.9649999738 ! Coefficient: damper compression per unit
                                       !   jounce (mm/mm), Axle 1, right side
CMP_DAMP_GAIN(1,2)  1 ! Multiplier for table
CMP_DAMP_OFFSET(1,2) 0 ! damper compression offset added to calculated value
                       !   (after gain) (mm)
CMP_DAMP_COEFFICIENT(2,1) 0.7969999909 ! Coefficient: damper compression per unit
                                       !   jounce (mm/mm), Axle 2, left side
CMP_DAMP_GAIN(2,1)  1 ! Multiplier for table
CMP_DAMP_OFFSET(2,1) 0 ! damper compression offset added to calculated value
                       !   (after gain) (mm)
CMP_DAMP_COEFFICIENT(2,2) 0.7969999909 ! Coefficient: damper compression per unit
                                       !   jounce (mm/mm), Axle 2, right side
CMP_DAMP_GAIN(2,2)  1 ! Multiplier for table
CMP_DAMP_OFFSET(2,2) 0 ! damper compression offset added to calculated value
                       !   (after gain) (mm)

! CMP_JSTOP: Jounce bumper compression as a function of jounce. The jounce stop
! compression can be computed from jounce. Or, a linear coefficient can be
! multiplied by jounce. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
CMP_JSTOP_COEFFICIENT(1,1) 0.9649999738 ! Coefficient: jounce stop compression per
                                        !   unit jounce (mm/mm), Axle 1, left
                                        !   side
CMP_JSTOP_GAIN(1,1) 1 ! Multiplier for table
CMP_JSTOP_OFFSET(1,1) 0 ! jounce stop compression offset added to calculated value
                        !   (after gain) (mm)
CMP_JSTOP_COEFFICIENT(1,2) 0.9649999738 ! Coefficient: jounce stop compression per
                                        !   unit jounce (mm/mm), Axle 1, right
                                        !   side
CMP_JSTOP_GAIN(1,2) 1 ! Multiplier for table
CMP_JSTOP_OFFSET(1,2) 0 ! jounce stop compression offset added to calculated value
                        !   (after gain) (mm)
CMP_JSTOP_COEFFICIENT(2,1) 0.7969999909 ! Coefficient: jounce stop compression per
                                        !   unit jounce (mm/mm), Axle 2, left
                                        !   side
CMP_JSTOP_GAIN(2,1) 1 ! Multiplier for table
CMP_JSTOP_OFFSET(2,1) 0 ! jounce stop compression offset added to calculated value
                        !   (after gain) (mm)
CMP_JSTOP_COEFFICIENT(2,2) 0.7969999909 ! Coefficient: jounce stop compression per
                                        !   unit jounce (mm/mm), Axle 2, right
                                        !   side
CMP_JSTOP_GAIN(2,2) 1 ! Multiplier for table
CMP_JSTOP_OFFSET(2,2) 0 ! jounce stop compression offset added to calculated value
                        !   (after gain) (mm)

! CMP_RSTOP: Rebound stop compression as a function of jounce. The rebound stop
! compression can be computed from jounce. Or, a linear coefficient can be
! multiplied by jounce. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
CMP_RSTOP_COEFFICIENT(1,1) 0.9649999738 ! Coefficient: rebound stop compression
                                        !   per unit jounce (mm/mm), Axle 1, left
                                        !   side
CMP_RSTOP_GAIN(1,1) 1 ! Multiplier for table
CMP_RSTOP_OFFSET(1,1) 0 ! rebound stop compression offset added to calculated
                        !   value (after gain) (mm)
CMP_RSTOP_COEFFICIENT(1,2) 0.9649999738 ! Coefficient: rebound stop compression
                                        !   per unit jounce (mm/mm), Axle 1,
                                        !   right side
CMP_RSTOP_GAIN(1,2) 1 ! Multiplier for table
CMP_RSTOP_OFFSET(1,2) 0 ! rebound stop compression offset added to calculated
                        !   value (after gain) (mm)
CMP_RSTOP_COEFFICIENT(2,1) 0.7969999909 ! Coefficient: rebound stop compression
                                        !   per unit jounce (mm/mm), Axle 2, left
                                        !   side
CMP_RSTOP_GAIN(2,1) 1 ! Multiplier for table
CMP_RSTOP_OFFSET(2,1) 0 ! rebound stop compression offset added to calculated
                        !   value (after gain) (mm)
CMP_RSTOP_COEFFICIENT(2,2) 0.7969999909 ! Coefficient: rebound stop compression
                                        !   per unit jounce (mm/mm), Axle 2,
                                        !   right side
CMP_RSTOP_GAIN(2,2) 1 ! Multiplier for table
CMP_RSTOP_OFFSET(2,2) 0 ! rebound stop compression offset added to calculated
                        !   value (after gain) (mm)

! CMP_SPR_SEAT: Lower spring seat movement as a function of jounce. The lower
! spring seat movement can be computed from jounce. Or, a linear coefficient can
! be multiplied by jounce. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
CMP_SPR_SEAT_COEFFICIENT(1,1) 0.9589999914 ! Coefficient: lower spring seat
                                           !   movement per unit jounce (mm/mm),
                                           !   Axle 1, left side
CMP_SPR_SEAT_GAIN(1,1) 1 ! Multiplier for table
CMP_SPR_SEAT_OFFSET(1,1) 0 ! lower spring seat movement offset added to calculated
                           !   value (after gain) (mm)
CMP_SPR_SEAT_COEFFICIENT(1,2) 0.9589999914 ! Coefficient: lower spring seat
                                           !   movement per unit jounce (mm/mm),
                                           !   Axle 1, right side
CMP_SPR_SEAT_GAIN(1,2) 1 ! Multiplier for table
CMP_SPR_SEAT_OFFSET(1,2) 0 ! lower spring seat movement offset added to calculated
                           !   value (after gain) (mm)
CMP_SPR_SEAT_COEFFICIENT(2,1) 0.7969999909 ! Coefficient: lower spring seat
                                           !   movement per unit jounce (mm/mm),
                                           !   Axle 2, left side
CMP_SPR_SEAT_GAIN(2,1) 1 ! Multiplier for table
CMP_SPR_SEAT_OFFSET(2,1) 0 ! lower spring seat movement offset added to calculated
                           !   value (after gain) (mm)
CMP_SPR_SEAT_COEFFICIENT(2,2) 0.7969999909 ! Coefficient: lower spring seat
                                           !   movement per unit jounce (mm/mm),
                                           !   Axle 2, right side
CMP_SPR_SEAT_GAIN(2,2) 1 ! Multiplier for table
CMP_SPR_SEAT_OFFSET(2,2) 0 ! lower spring seat movement offset added to calculated
                           !   value (after gain) (mm)

! CS_FY: Compliance: wheel steer due to out-of-phase Fy. The CS_FY deflection
! can be computed from force. Or, a linear coefficient can be multiplied by
! force. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
CS_FY_COEFFICIENT(1,1) -0.0002699999895 ! Coefficient: CS_FY deflection per unit
                                        !   force (deg/N), Axle 1, left side
CS_FY_GAIN(1,1)     1 ! Multiplier for table
CS_FY_OFFSET(1,1)   0 ! CS_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CS_FY_COEFFICIENT(1,2) -0.0002699999895 ! Coefficient: CS_FY deflection per unit
                                        !   force (deg/N), Axle 1, right side
CS_FY_GAIN(1,2)     1 ! Multiplier for table
CS_FY_OFFSET(1,2)   0 ! CS_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CS_FY_COEFFICIENT(2,1) -9.999999747e-006 ! Coefficient: CS_FY deflection per unit
                                         !   force (deg/N), Axle 2, left side
CS_FY_GAIN(2,1)     1 ! Multiplier for table
CS_FY_OFFSET(2,1)   0 ! CS_FY deflection offset added to calculated value (after
                      !   gain) (deg)
CS_FY_COEFFICIENT(2,2) -9.999999747e-006 ! Coefficient: CS_FY deflection per unit
                                         !   force (deg/N), Axle 2, right side
CS_FY_GAIN(2,2)     1 ! Multiplier for table
CS_FY_OFFSET(2,2)   0 ! CS_FY deflection offset added to calculated value (after
                      !   gain) (deg)

! CS_MZ: Compliance: wheel steer due to out-of-phase Mz. The CS_MZ deflection
! can be computed from moment. Or, a linear coefficient can be multiplied by
! moment. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
CS_MZ_COEFFICIENT(1,1) 0.003799999831 ! Coefficient: CS_MZ deflection per unit
                                      !   moment (deg/N-m), Axle 1, left side
CS_MZ_GAIN(1,1)     1 ! Multiplier for table
CS_MZ_OFFSET(1,1)   0 ! CS_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CS_MZ_COEFFICIENT(1,2) 0.003799999831 ! Coefficient: CS_MZ deflection per unit
                                      !   moment (deg/N-m), Axle 1, right side
CS_MZ_GAIN(1,2)     1 ! Multiplier for table
CS_MZ_OFFSET(1,2)   0 ! CS_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CS_MZ_COEFFICIENT(2,1) 0.001899999916 ! Coefficient: CS_MZ deflection per unit
                                      !   moment (deg/N-m), Axle 2, left side
CS_MZ_GAIN(2,1)     1 ! Multiplier for table
CS_MZ_OFFSET(2,1)   0 ! CS_MZ deflection offset added to calculated value (after
                      !   gain) (deg)
CS_MZ_COEFFICIENT(2,2) 0.001899999916 ! Coefficient: CS_MZ deflection per unit
                                      !   moment (deg/N-m), Axle 2, right side
CS_MZ_GAIN(2,2)     1 ! Multiplier for table
CS_MZ_OFFSET(2,2)   0 ! CS_MZ deflection offset added to calculated value (after
                      !   gain) (deg)

! CT_FX: Compliance: wheel toe due to in-phase Fx. The CT_FX deflection can be
! computed from force. Or, a linear coefficient can be multiplied by force. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.
CT_FX_COEFFICIENT(1,1) 0.0004299999855 ! Coefficient: CT_FX deflection per unit
                                       !   force (deg/N), Axle 1, left side
CT_FX_GAIN(1,1)     1 ! Multiplier for table
CT_FX_OFFSET(1,1)   0 ! CT_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CT_FX_COEFFICIENT(1,2) 0.0004299999855 ! Coefficient: CT_FX deflection per unit
                                       !   force (deg/N), Axle 1, right side
CT_FX_GAIN(1,2)     1 ! Multiplier for table
CT_FX_OFFSET(1,2)   0 ! CT_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CT_FX_COEFFICIENT(2,1) 0 ! Coefficient: CT_FX deflection per unit force (deg/N),
                         !   Axle 2, left side
CT_FX_GAIN(2,1)     1 ! Multiplier for table
CT_FX_OFFSET(2,1)   0 ! CT_FX deflection offset added to calculated value (after
                      !   gain) (deg)
CT_FX_COEFFICIENT(2,2) 0 ! Coefficient: CT_FX deflection per unit force (deg/N),
                         !   Axle 2, right side
CT_FX_GAIN(2,2)     1 ! Multiplier for table
CT_FX_OFFSET(2,2)   0 ! CT_FX deflection offset added to calculated value (after
                      !   gain) (deg)

! C_LAT: Compliance: wheel lateral inward due to out-of-phase Fy. The C_LAT
! deflection can be computed from force. Or, a linear coefficient can be
! multiplied by force. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
C_LAT_COEFFICIENT(1,1) 4.099999933e-005 ! Coefficient: C_LAT deflection per unit
                                        !   force (mm/N), Axle 1, left side
C_LAT_GAIN(1,1)     1 ! Multiplier for table
C_LAT_OFFSET(1,1)   0 ! C_LAT deflection offset added to calculated value (after
                      !   gain) (mm)
C_LAT_COEFFICIENT(1,2) 4.099999933e-005 ! Coefficient: C_LAT deflection per unit
                                        !   force (mm/N), Axle 1, right side
C_LAT_GAIN(1,2)     1 ! Multiplier for table
C_LAT_OFFSET(1,2)   0 ! C_LAT deflection offset added to calculated value (after
                      !   gain) (mm)
C_LAT_COEFFICIENT(2,1) 3.799999831e-005 ! Coefficient: C_LAT deflection per unit
                                        !   force (mm/N), Axle 2, left side
C_LAT_GAIN(2,1)     1 ! Multiplier for table
C_LAT_OFFSET(2,1)   0 ! C_LAT deflection offset added to calculated value (after
                      !   gain) (mm)
C_LAT_COEFFICIENT(2,2) 3.799999831e-005 ! Coefficient: C_LAT deflection per unit
                                        !   force (mm/N), Axle 2, right side
C_LAT_GAIN(2,2)     1 ! Multiplier for table
C_LAT_OFFSET(2,2)   0 ! C_LAT deflection offset added to calculated value (after
                      !   gain) (mm)

! C_LONG: Compliance: wheel longitudinal due to in-phase Fx. The C_LONG
! deflection can be computed from force. Or, a linear coefficient can be
! multiplied by force. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
C_LONG_COEFFICIENT(1,1) 5.000000237e-005 ! Coefficient: C_LONG deflection per unit
                                         !   force (mm/N), Axle 1, left side
C_LONG_GAIN(1,1)    1 ! Multiplier for table
C_LONG_OFFSET(1,1)  0 ! C_LONG deflection offset added to calculated value (after
                      !   gain) (mm)
C_LONG_COEFFICIENT(1,2) 5.000000237e-005 ! Coefficient: C_LONG deflection per unit
                                         !   force (mm/N), Axle 1, right side
C_LONG_GAIN(1,2)    1 ! Multiplier for table
C_LONG_OFFSET(1,2)  0 ! C_LONG deflection offset added to calculated value (after
                      !   gain) (mm)
C_LONG_COEFFICIENT(2,1) 7.000000187e-005 ! Coefficient: C_LONG deflection per unit
                                         !   force (mm/N), Axle 2, left side
C_LONG_GAIN(2,1)    1 ! Multiplier for table
C_LONG_OFFSET(2,1)  0 ! C_LONG deflection offset added to calculated value (after
                      !   gain) (mm)
C_LONG_COEFFICIENT(2,2) 7.000000187e-005 ! Coefficient: C_LONG deflection per unit
                                         !   force (mm/N), Axle 2, right side
C_LONG_GAIN(2,2)    1 ! Multiplier for table
C_LONG_OFFSET(2,2)  0 ! C_LONG deflection offset added to calculated value (after
                      !   gain) (mm)

! DOWNSHIFT_TRANS: Transmission speed when downshift occurs as function of
! throttle. IGEAR specifies the lower gear for each table (e.g., IGEAR 2 means
! downshift from 3 to 2). The transmission speed can be computed from throttle
! position. Or, a linear coefficient can be multiplied by throttle position. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
            0,          699
          0.4,          699
          0.8,         1240
            1,         1240
ENDTABLE
DOWNSHIFT_TRANS_GAIN(1) 1 ! Multiplier for table
DOWNSHIFT_TRANS_OFFSET(1) 0 ! transmission speed offset added to calculated value
                            !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
            0,         1026
          0.4,         1026
          0.8,         2130
            1,         2130
ENDTABLE
DOWNSHIFT_TRANS_GAIN(2) 1 ! Multiplier for table
DOWNSHIFT_TRANS_OFFSET(2) 0 ! transmission speed offset added to calculated value
                            !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
            0,         1440
          0.4,         1440
          0.8,         3125
            1,         3125
ENDTABLE
DOWNSHIFT_TRANS_GAIN(3) 1 ! Multiplier for table
DOWNSHIFT_TRANS_OFFSET(3) 0 ! transmission speed offset added to calculated value
                            !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
            0,         2020
          0.4,         2020
          0.8,         4388
            1,         4388
ENDTABLE
DOWNSHIFT_TRANS_GAIN(4) 1 ! Multiplier for table
DOWNSHIFT_TRANS_OFFSET(4) 0 ! transmission speed offset added to calculated value
                            !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
            0,         2474
          0.4,         2474
          0.8,         6154
            1,         6154
ENDTABLE
DOWNSHIFT_TRANS_GAIN(5) 1 ! Multiplier for table
DOWNSHIFT_TRANS_OFFSET(5) 0 ! transmission speed offset added to calculated value
                            !   (after gain) (rpm)

! FD: Suspension damper force (1 side). The damper force can be computed from
! compression rate. Or, a linear coefficient can be multiplied by compression
! rate. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.

! 1D table: col 1 = compression rate (mm/s), col 2 = damper force (N)
FD_TABLE(1,1) LINEAR ! Axle 1, left side
        -1410,        -5008
         -720,        -3436
         -390,        -2324
         -210,        -1792
          -90,        -1008
          -20,         -228
           20,          228
           90,          596
          200,          784
          390,         1100
          760,         1796
         1160,         2560
ENDTABLE
FD_GAIN(1,1)        1 ! Multiplier for table
FD_OFFSET(1,1)      0 ! damper force offset added to calculated value (after gain)
                      !   (N)

! 1D table: col 1 = compression rate (mm/s), col 2 = damper force (N)
FD_TABLE(1,2) LINEAR ! Axle 1, right side
        -1410,        -5008
         -720,        -3436
         -390,        -2324
         -210,        -1792
          -90,        -1008
          -20,         -228
           20,          228
           90,          596
          200,          784
          390,         1100
          760,         1796
         1160,         2560
ENDTABLE
FD_GAIN(1,2)        1 ! Multiplier for table
FD_OFFSET(1,2)      0 ! damper force offset added to calculated value (after gain)
                      !   (N)

! 1D table: col 1 = compression rate (mm/s), col 2 = damper force (N)
FD_TABLE(2,1) LINEAR ! Axle 2, left side
        -1410,        -5008
         -720,        -3436
         -390,        -2324
         -210,        -1792
          -90,        -1008
          -20,         -228
           20,          228
           90,          596
          200,          784
          390,         1100
          760,         1796
         1160,         2560
ENDTABLE
FD_GAIN(2,1)        1 ! Multiplier for table
FD_OFFSET(2,1)      0 ! damper force offset added to calculated value (after gain)
                      !   (N)

! 1D table: col 1 = compression rate (mm/s), col 2 = damper force (N)
FD_TABLE(2,2) LINEAR ! Axle 2, right side
        -1410,        -5008
         -720,        -3436
         -390,        -2324
         -210,        -1792
          -90,        -1008
          -20,         -228
           20,          228
           90,          596
          200,          784
          390,         1100
          760,         1796
         1160,         2560
ENDTABLE
FD_GAIN(2,2)        1 ! Multiplier for table
FD_OFFSET(2,2)      0 ! damper force offset added to calculated value (after gain)
                      !   (N)

! FS_COMP: Compression (upper) envelope of suspension spring force (1 side) as a
! function of static load and deflection. The spring force can be computed from
! deflection and static spring force. Or, a 1D table can be used involving only
! deflection. Or, a linear coefficient can be multiplied by deflection. The value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.
FS_COMP_COEFFICIENT(1,1) 26.99999809 ! Coefficient: spring force per unit
                                     !   deflection (N/mm), Axle 1, left side
FS_COMP_GAIN(1,1)   1 ! Multiplier for table
FS_COMP_OFFSET(1,1) 20 ! spring force offset added to calculated value (after
                       !   gain) (N)
FS_COMP_COEFFICIENT(1,2) 26.99999809 ! Coefficient: spring force per unit
                                     !   deflection (N/mm), Axle 1, right side
FS_COMP_GAIN(1,2)   1 ! Multiplier for table
FS_COMP_OFFSET(1,2) 20 ! spring force offset added to calculated value (after
                       !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
FS_COMP_TABLE(2,1) LINEAR ! Axle 2, left side
          -50,       1560.7
          -45,      1713.58
          -40,      1866.45
          -35,      2019.33
          -30,      2172.21
          -25,      2325.09
          -20,      2477.96
          -15,      2630.84
          -10,      2783.72
           -5,       2936.6
            0,      3089.47
            5,      3242.35
           10,      3395.23
           15,       3548.1
           20,      3700.98
           25,      3853.86
           30,      4006.74
           35,      4159.61
           40,      4312.49
           45,      4465.37
           50,      4618.25
ENDTABLE
FS_COMP_GAIN(2,1)   1 ! Multiplier for table
FS_COMP_OFFSET(2,1) 0 ! spring force offset added to calculated value (after gain)
                      !   (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
FS_COMP_TABLE(2,2) LINEAR ! Axle 2, right side
          -50,       1560.7
          -45,      1713.58
          -40,      1866.45
          -35,      2019.33
          -30,      2172.21
          -25,      2325.09
          -20,      2477.96
          -15,      2630.84
          -10,      2783.72
           -5,       2936.6
            0,      3089.47
            5,      3242.35
           10,      3395.23
           15,       3548.1
           20,      3700.98
           25,      3853.86
           30,      4006.74
           35,      4159.61
           40,      4312.49
           45,      4465.37
           50,      4618.25
ENDTABLE
FS_COMP_GAIN(2,2)   1 ! Multiplier for table
FS_COMP_OFFSET(2,2) 0 ! spring force offset added to calculated value (after gain)
                      !   (N)

! FS_EXT: Extension (lower) envelope of suspension spring force (1 side) as a
! function of static load and deflection. The spring force can be computed from
! deflection and static spring force. Or, a 1D table can be used involving only
! deflection. Or, a linear coefficient can be multiplied by deflection. The value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.
FS_EXT_COEFFICIENT(1,1) 26.99999809 ! Coefficient: spring force per unit
                                    !   deflection (N/mm), Axle 1, left side
FS_EXT_GAIN(1,1)    1 ! Multiplier for table
FS_EXT_OFFSET(1,1) -20 ! spring force offset added to calculated value (after
                       !   gain) (N)
FS_EXT_COEFFICIENT(1,2) 26.99999809 ! Coefficient: spring force per unit
                                    !   deflection (N/mm), Axle 1, right side
FS_EXT_GAIN(1,2)    1 ! Multiplier for table
FS_EXT_OFFSET(1,2) -20 ! spring force offset added to calculated value (after
                       !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
FS_EXT_TABLE(2,1) LINEAR ! Axle 2, left side
          -50,       1520.7
          -45,      1673.58
          -40,      1826.45
          -35,      1979.33
          -30,      2132.21
          -25,      2285.09
          -20,      2437.96
          -15,      2590.84
          -10,      2743.72
           -5,       2896.6
            0,      3049.47
            5,      3202.35
           10,      3355.23
           15,       3508.1
           20,      3660.98
           25,      3813.86
           30,      3966.74
           35,      4119.61
           40,      4272.49
           45,      4425.37
           50,      4578.25
ENDTABLE
FS_EXT_GAIN(2,1)    1 ! Multiplier for table
FS_EXT_OFFSET(2,1)  0 ! spring force offset added to calculated value (after gain)
                      !   (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
FS_EXT_TABLE(2,2) LINEAR ! Axle 2, right side
          -50,       1520.7
          -45,      1673.58
          -40,      1826.45
          -35,      1979.33
          -30,      2132.21
          -25,      2285.09
          -20,      2437.96
          -15,      2590.84
          -10,      2743.72
           -5,       2896.6
            0,      3049.47
            5,      3202.35
           10,      3355.23
           15,       3508.1
           20,      3660.98
           25,      3813.86
           30,      3966.74
           35,      4119.61
           40,      4272.49
           45,      4425.37
           50,      4578.25
ENDTABLE
FS_EXT_GAIN(2,2)    1 ! Multiplier for table
FS_EXT_OFFSET(2,2)  0 ! spring force offset added to calculated value (after gain)
                      !   (N)

! FUEL_RATE: Fuel consumption rate as a function of throttle and engine speed.
! The fuel rate can be computed from engine speed and throttle position. Or, a 1D
! table can be used involving only engine speed. The value can be transformed by
! a gain. A calculated value can also be given a specified offset.
FUEL_RATE_CONSTANT  0 ! Constant fuel rate (-)
FUEL_RATE_GAIN      1 ! Multiplier for table
FUEL_RATE_OFFSET    0 ! fuel rate offset added to calculated value (after gain)
                      !   (-)

! FX_AERO_SHAPING: Shaping function for X component of aerodynamic force. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
FX_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,       0.0112
          -78,       0.0435
          -72,        0.094
          -66,       0.1575
          -60,       0.2279
          -54,       0.2984
          -48,       0.3619
          -42,       0.4124
          -36,       0.4447
          -30,       0.4559
          -20,       0.4559
          -18,     0.434468
          -16,     0.415292
          -14,     0.398372
          -12,     0.383708
          -10,       0.3713
           -8,     0.361148
           -6,     0.353252
           -4,     0.347612
           -2,     0.344228
            0,       0.3431
            2,     0.344228
            4,     0.347612
            6,     0.353252
            8,     0.361148
           10,       0.3713
           12,     0.383708
           14,     0.398372
           16,     0.415292
           18,     0.434468
           20,       0.4559
           30,       0.4559
           36,       0.4447
           42,       0.4124
           48,       0.3619
           54,       0.2984
           60,        0.228
           66,       0.1575
           72,        0.094
           78,       0.0435
           84,       0.0112
           90,            0
ENDTABLE
FX_AERO_SHAPING_GAIN 1 ! Multiplier for table
FX_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! FX_AERO_SHAPING_2: Coefficient for X component of aerodynamic force. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
FX_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
FX_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
FX_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! FX_TIRE: Tire longitudinal force (Fx) as a function of vertical load (Fz) and
! longitudinal slip (Kappa). The Fx can be computed from Kappa and Fz (vertical
! load). (Note: a row and column of zeros are automatically inserted to force Fx
! to zero when either Kappa or Fz (vertical load) go to zero.) The value can be
! transformed by a gain.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Kappa (-) followed by 5 values of Fx (N).
FX_TIRE_CARPET(1,1) ! Axle 1, left side
            0,          2105,          3995,          6120,          7900,         10100
         0.02,       926.741,       1853.48,       2780.22,       3706.97,        4633.7
         0.04,       1701.43,       3402.86,       5104.29,       6805.72,       8507.15
         0.06,       2240.07,       4480.13,       6720.21,       8960.27,       11200.3
         0.08,       2548.95,       5097.92,       7646.88,       10195.8,       12744.8
          0.1,       2689.78,       5379.54,       8069.32,       10759.1,       13448.8
         0.12,       2729.82,       5459.63,       8189.45,       10919.3,       13649.1
         0.14,       2717.36,       5434.73,       8152.09,       10869.4,       13586.8
         0.16,        2680.7,        5361.4,        8042.1,       10722.8,       13403.5
         0.18,       2634.75,        5269.5,       7904.24,         10539,       13173.7
          0.2,       2586.89,       5173.78,       7760.68,       10347.6,       12934.4
         0.25,       2476.95,        4953.9,       7430.85,       9907.79,       12384.7
          0.3,       2388.22,       4776.46,       7164.69,       9552.92,       11941.1
          0.4,       2262.94,       4525.87,       6788.82,       9051.76,       11314.7
          0.5,       2181.64,       4363.28,       6544.93,       8726.56,       10908.2
          0.6,       2125.47,       4250.95,       6376.42,       8501.91,       10627.4
          0.7,       2084.58,       4169.16,       6253.75,       8338.33,       10422.9
          0.8,       2053.55,       4107.12,       6160.67,       8214.24,       10267.8
          0.9,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
            1,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
ENDTABLE
FX_TIRE_GAIN(1,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Kappa (-) followed by 5 values of Fx (N).
FX_TIRE_CARPET(1,2) ! Axle 1, right side
            0,          2105,          3995,          6120,          7900,         10100
         0.02,       926.741,       1853.48,       2780.22,       3706.97,        4633.7
         0.04,       1701.43,       3402.86,       5104.29,       6805.72,       8507.15
         0.06,       2240.07,       4480.13,       6720.21,       8960.27,       11200.3
         0.08,       2548.95,       5097.92,       7646.88,       10195.8,       12744.8
          0.1,       2689.78,       5379.54,       8069.32,       10759.1,       13448.8
         0.12,       2729.82,       5459.63,       8189.45,       10919.3,       13649.1
         0.14,       2717.36,       5434.73,       8152.09,       10869.4,       13586.8
         0.16,        2680.7,        5361.4,        8042.1,       10722.8,       13403.5
         0.18,       2634.75,        5269.5,       7904.24,         10539,       13173.7
          0.2,       2586.89,       5173.78,       7760.68,       10347.6,       12934.4
         0.25,       2476.95,        4953.9,       7430.85,       9907.79,       12384.7
          0.3,       2388.22,       4776.46,       7164.69,       9552.92,       11941.1
          0.4,       2262.94,       4525.87,       6788.82,       9051.76,       11314.7
          0.5,       2181.64,       4363.28,       6544.93,       8726.56,       10908.2
          0.6,       2125.47,       4250.95,       6376.42,       8501.91,       10627.4
          0.7,       2084.58,       4169.16,       6253.75,       8338.33,       10422.9
          0.8,       2053.55,       4107.12,       6160.67,       8214.24,       10267.8
          0.9,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
            1,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
ENDTABLE
FX_TIRE_GAIN(1,2)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Kappa (-) followed by 5 values of Fx (N).
FX_TIRE_CARPET(2,1) ! Axle 2, left side
            0,          2105,          3995,          6120,          7900,         10100
         0.02,       926.741,       1853.48,       2780.22,       3706.97,        4633.7
         0.04,       1701.43,       3402.86,       5104.29,       6805.72,       8507.15
         0.06,       2240.07,       4480.13,       6720.21,       8960.27,       11200.3
         0.08,       2548.95,       5097.92,       7646.88,       10195.8,       12744.8
          0.1,       2689.78,       5379.54,       8069.32,       10759.1,       13448.8
         0.12,       2729.82,       5459.63,       8189.45,       10919.3,       13649.1
         0.14,       2717.36,       5434.73,       8152.09,       10869.4,       13586.8
         0.16,        2680.7,        5361.4,        8042.1,       10722.8,       13403.5
         0.18,       2634.75,        5269.5,       7904.24,         10539,       13173.7
          0.2,       2586.89,       5173.78,       7760.68,       10347.6,       12934.4
         0.25,       2476.95,        4953.9,       7430.85,       9907.79,       12384.7
          0.3,       2388.22,       4776.46,       7164.69,       9552.92,       11941.1
          0.4,       2262.94,       4525.87,       6788.82,       9051.76,       11314.7
          0.5,       2181.64,       4363.28,       6544.93,       8726.56,       10908.2
          0.6,       2125.47,       4250.95,       6376.42,       8501.91,       10627.4
          0.7,       2084.58,       4169.16,       6253.75,       8338.33,       10422.9
          0.8,       2053.55,       4107.12,       6160.67,       8214.24,       10267.8
          0.9,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
            1,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
ENDTABLE
FX_TIRE_GAIN(2,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Kappa (-) followed by 5 values of Fx (N).
FX_TIRE_CARPET(2,2) ! Axle 2, right side
            0,          2105,          3995,          6120,          7900,         10100
         0.02,       926.741,       1853.48,       2780.22,       3706.97,        4633.7
         0.04,       1701.43,       3402.86,       5104.29,       6805.72,       8507.15
         0.06,       2240.07,       4480.13,       6720.21,       8960.27,       11200.3
         0.08,       2548.95,       5097.92,       7646.88,       10195.8,       12744.8
          0.1,       2689.78,       5379.54,       8069.32,       10759.1,       13448.8
         0.12,       2729.82,       5459.63,       8189.45,       10919.3,       13649.1
         0.14,       2717.36,       5434.73,       8152.09,       10869.4,       13586.8
         0.16,        2680.7,        5361.4,        8042.1,       10722.8,       13403.5
         0.18,       2634.75,        5269.5,       7904.24,         10539,       13173.7
          0.2,       2586.89,       5173.78,       7760.68,       10347.6,       12934.4
         0.25,       2476.95,        4953.9,       7430.85,       9907.79,       12384.7
          0.3,       2388.22,       4776.46,       7164.69,       9552.92,       11941.1
          0.4,       2262.94,       4525.87,       6788.82,       9051.76,       11314.7
          0.5,       2181.64,       4363.28,       6544.93,       8726.56,       10908.2
          0.6,       2125.47,       4250.95,       6376.42,       8501.91,       10627.4
          0.7,       2084.58,       4169.16,       6253.75,       8338.33,       10422.9
          0.8,       2053.55,       4107.12,       6160.67,       8214.24,       10267.8
          0.9,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
            1,       2029.26,       4058.51,       6087.76,       8117.01,       10146.3
ENDTABLE
FX_TIRE_GAIN(2,2)   1 ! Multiplier for table

! FY_AERO_SHAPING: Shaping function for Y component of aerodynamic force. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
FY_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,      -0.0169
          -78,      -0.0659
          -72,      -0.1422
          -66,      -0.2384
          -60,       -0.345
          -54,      -0.4516
          -48,      -0.5478
          -42,      -0.6241
          -36,      -0.6731
          -30,        -0.69
          -20,        -0.69
           20,         0.69
           30,         0.69
           36,       0.6731
           42,       0.6241
           48,       0.5478
           54,       0.4516
           60,        0.345
           66,       0.2384
           72,       0.1422
           78,       0.0659
           84,       0.0169
           90,            0
ENDTABLE
FY_AERO_SHAPING_GAIN 1 ! Multiplier for table
FY_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! FY_AERO_SHAPING_2: Coefficient for Y component of aerodynamic force. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
FY_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
FY_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
FY_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! FY_TIRE: Tire lateral force (Fy) as a function of vertical load (Fz) and
! lateral slip (Alpha). The Fy can be computed from Alpha and Fz (vertical load).
! (Note: a row and column of zeros are automatically inserted to force Fy to zero
! when either Alpha or Fz (vertical load) go to zero.) The value can be
! transformed by a gain.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Fy (N).
FY_TIRE_CARPET(1,1) ! Axle 1, left side
            0,          1725,          3500,          6100,          6950,          9005
          0.5,       444.357,       894.186,       1293.54,       1601.93,       1784.39
            1,       843.546,        1694.5,       2452.99,       3047.78,        3417.9
          1.5,       1162.09,       2327.41,       3373.13,       4214.48,       4780.29
            2,       1403.45,        2800.6,       4064.18,       5111.02,       5873.77
          2.5,       1580.72,        3142.1,       4565.24,       5779.43,       6731.16
            3,       1707.08,       3379.93,       4915.41,       6261.69,       7385.32
          3.5,       1795.66,       3542.12,       5153.78,       6599.82,       7869.06
            4,        1859.6,       3656.67,       5319.43,       6835.85,       8215.23
          4.5,       1893.83,       3713.24,       5402.64,       6968.31,        8439.3
            5,       1904.16,       3724.46,       5422.23,       7019.99,       8564.79
          5.5,       1896.19,       3701.92,       5395.45,       7011.91,       8613.61
            6,       1875.03,       3656.45,       5337.38,        6962.7,       8605.54
          6.5,        1845.3,          3597,        5261.2,        6887.9,        8557.9
            7,       1810.95,       3531.15,       5177.14,        6800.2,       8485.17
          7.5,       1775.12,       3464.91,       5092.89,       6709.15,       8398.94
            8,       1740.18,       3402.12,       5013.56,       6621.16,       8308.19
          8.5,        1707.8,       3345.23,        4942.1,       6540.06,       8219.02
            9,       1678.67,       3295.32,        4879.5,       6467.91,       8135.36
          9.5,       1653.27,       3252.61,       4825.96,       6405.21,       8059.17
           10,       1631.62,       3216.48,       4780.78,       6351.47,       7991.56
           12,       1574.53,       3123.37,       4662.96,       6207.67,       7798.93
           14,       1546.58,          3078,        4604.6,       6133.95,       7693.72
           16,       1531.91,       3054.18,        4573.3,       6093.89,       7634.76
           18,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
           20,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
ENDTABLE
FY_TIRE_GAIN(1,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Fy (N).
FY_TIRE_CARPET(1,2) ! Axle 1, right side
            0,          1725,          3500,          6100,          6950,          9005
          0.5,       444.357,       894.186,       1293.54,       1601.93,       1784.39
            1,       843.546,        1694.5,       2452.99,       3047.78,        3417.9
          1.5,       1162.09,       2327.41,       3373.13,       4214.48,       4780.29
            2,       1403.45,        2800.6,       4064.18,       5111.02,       5873.77
          2.5,       1580.72,        3142.1,       4565.24,       5779.43,       6731.16
            3,       1707.08,       3379.93,       4915.41,       6261.69,       7385.32
          3.5,       1795.66,       3542.12,       5153.78,       6599.82,       7869.06
            4,        1859.6,       3656.67,       5319.43,       6835.85,       8215.23
          4.5,       1893.83,       3713.24,       5402.64,       6968.31,        8439.3
            5,       1904.16,       3724.46,       5422.23,       7019.99,       8564.79
          5.5,       1896.19,       3701.92,       5395.45,       7011.91,       8613.61
            6,       1875.03,       3656.45,       5337.38,        6962.7,       8605.54
          6.5,        1845.3,          3597,        5261.2,        6887.9,        8557.9
            7,       1810.95,       3531.15,       5177.14,        6800.2,       8485.17
          7.5,       1775.12,       3464.91,       5092.89,       6709.15,       8398.94
            8,       1740.18,       3402.12,       5013.56,       6621.16,       8308.19
          8.5,        1707.8,       3345.23,        4942.1,       6540.06,       8219.02
            9,       1678.67,       3295.32,        4879.5,       6467.91,       8135.36
          9.5,       1653.27,       3252.61,       4825.96,       6405.21,       8059.17
           10,       1631.62,       3216.48,       4780.78,       6351.47,       7991.56
           12,       1574.53,       3123.37,       4662.96,       6207.67,       7798.93
           14,       1546.58,          3078,        4604.6,       6133.95,       7693.72
           16,       1531.91,       3054.18,        4573.3,       6093.89,       7634.76
           18,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
           20,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
ENDTABLE
FY_TIRE_GAIN(1,2)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Fy (N).
FY_TIRE_CARPET(2,1) ! Axle 2, left side
            0,          1725,          3500,          6100,          6950,          9005
          0.5,       444.357,       894.186,       1293.54,       1601.93,       1784.39
            1,       843.546,        1694.5,       2452.99,       3047.78,        3417.9
          1.5,       1162.09,       2327.41,       3373.13,       4214.48,       4780.29
            2,       1403.45,        2800.6,       4064.18,       5111.02,       5873.77
          2.5,       1580.72,        3142.1,       4565.24,       5779.43,       6731.16
            3,       1707.08,       3379.93,       4915.41,       6261.69,       7385.32
          3.5,       1795.66,       3542.12,       5153.78,       6599.82,       7869.06
            4,        1859.6,       3656.67,       5319.43,       6835.85,       8215.23
          4.5,       1893.83,       3713.24,       5402.64,       6968.31,        8439.3
            5,       1904.16,       3724.46,       5422.23,       7019.99,       8564.79
          5.5,       1896.19,       3701.92,       5395.45,       7011.91,       8613.61
            6,       1875.03,       3656.45,       5337.38,        6962.7,       8605.54
          6.5,        1845.3,          3597,        5261.2,        6887.9,        8557.9
            7,       1810.95,       3531.15,       5177.14,        6800.2,       8485.17
          7.5,       1775.12,       3464.91,       5092.89,       6709.15,       8398.94
            8,       1740.18,       3402.12,       5013.56,       6621.16,       8308.19
          8.5,        1707.8,       3345.23,        4942.1,       6540.06,       8219.02
            9,       1678.67,       3295.32,        4879.5,       6467.91,       8135.36
          9.5,       1653.27,       3252.61,       4825.96,       6405.21,       8059.17
           10,       1631.62,       3216.48,       4780.78,       6351.47,       7991.56
           12,       1574.53,       3123.37,       4662.96,       6207.67,       7798.93
           14,       1546.58,          3078,        4604.6,       6133.95,       7693.72
           16,       1531.91,       3054.18,        4573.3,       6093.89,       7634.76
           18,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
           20,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
ENDTABLE
FY_TIRE_GAIN(2,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Fy (N).
FY_TIRE_CARPET(2,2) ! Axle 2, right side
            0,          1725,          3500,          6100,          6950,          9005
          0.5,       444.357,       894.186,       1293.54,       1601.93,       1784.39
            1,       843.546,        1694.5,       2452.99,       3047.78,        3417.9
          1.5,       1162.09,       2327.41,       3373.13,       4214.48,       4780.29
            2,       1403.45,        2800.6,       4064.18,       5111.02,       5873.77
          2.5,       1580.72,        3142.1,       4565.24,       5779.43,       6731.16
            3,       1707.08,       3379.93,       4915.41,       6261.69,       7385.32
          3.5,       1795.66,       3542.12,       5153.78,       6599.82,       7869.06
            4,        1859.6,       3656.67,       5319.43,       6835.85,       8215.23
          4.5,       1893.83,       3713.24,       5402.64,       6968.31,        8439.3
            5,       1904.16,       3724.46,       5422.23,       7019.99,       8564.79
          5.5,       1896.19,       3701.92,       5395.45,       7011.91,       8613.61
            6,       1875.03,       3656.45,       5337.38,        6962.7,       8605.54
          6.5,        1845.3,          3597,        5261.2,        6887.9,        8557.9
            7,       1810.95,       3531.15,       5177.14,        6800.2,       8485.17
          7.5,       1775.12,       3464.91,       5092.89,       6709.15,       8398.94
            8,       1740.18,       3402.12,       5013.56,       6621.16,       8308.19
          8.5,        1707.8,       3345.23,        4942.1,       6540.06,       8219.02
            9,       1678.67,       3295.32,        4879.5,       6467.91,       8135.36
          9.5,       1653.27,       3252.61,       4825.96,       6405.21,       8059.17
           10,       1631.62,       3216.48,       4780.78,       6351.47,       7991.56
           12,       1574.53,       3123.37,       4662.96,       6207.67,       7798.93
           14,       1546.58,          3078,        4604.6,       6133.95,       7693.72
           16,       1531.91,       3054.18,        4573.3,       6093.89,       7634.76
           18,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
           20,       1523.64,        3040.4,       4554.99,       6070.17,       7599.62
ENDTABLE
FY_TIRE_GAIN(2,2)   1 ! Multiplier for table

! FZ_AERO_SHAPING: Shaping function for Z component of aerodynamic force. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
FZ_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,       0.0145
          -78,       0.0567
          -72,       0.1224
          -66,       0.2052
          -60,        0.297
          -54,       0.3888
          -48,       0.4716
          -42,       0.5373
          -36,       0.5795
          -30,        0.594
          -20,        0.594
          -18,      0.51268
          -16,      0.43992
          -14,      0.37572
          -12,      0.32008
          -10,        0.273
           -8,      0.23448
           -6,      0.20452
           -4,      0.18312
           -2,      0.17028
            0,        0.166
            2,      0.17028
            4,      0.18312
            6,      0.20452
            8,      0.23448
           10,        0.273
           12,      0.32008
           14,      0.37572
           16,      0.43992
           18,      0.51268
           20,        0.594
           30,        0.594
           36,       0.5795
           42,       0.5373
           48,       0.4716
           54,       0.3888
           60,        0.297
           66,       0.2052
           72,       0.1224
           78,       0.0567
           84,       0.0145
           90,            0
ENDTABLE
FZ_AERO_SHAPING_GAIN 1 ! Multiplier for table
FZ_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! FZ_AERO_SHAPING_2: Coefficient for Z component of aerodynamic force. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
FZ_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
FZ_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
FZ_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! FZ_TIRE: Tire vertical load vs vertical deflection. The vertical load can be
! computed from tire deflection. Or, a linear coefficient can be multiplied by
! tire deflection. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
FZ_TIRE_COEFFICIENT(1,1) 227.9999847 ! Coefficient: vertical load per unit tire
                                     !   deflection (N/mm), Axle 1, left side
FZ_TIRE_GAIN(1,1)   1 ! Multiplier for table
FZ_TIRE_OFFSET(1,1) 0 ! vertical load offset added to calculated value (after
                      !   gain) (N)
FZ_TIRE_COEFFICIENT(1,2) 227.9999847 ! Coefficient: vertical load per unit tire
                                     !   deflection (N/mm), Axle 1, right side
FZ_TIRE_GAIN(1,2)   1 ! Multiplier for table
FZ_TIRE_OFFSET(1,2) 0 ! vertical load offset added to calculated value (after
                      !   gain) (N)
FZ_TIRE_COEFFICIENT(2,1) 227.9999847 ! Coefficient: vertical load per unit tire
                                     !   deflection (N/mm), Axle 2, left side
FZ_TIRE_GAIN(2,1)   1 ! Multiplier for table
FZ_TIRE_OFFSET(2,1) 0 ! vertical load offset added to calculated value (after
                      !   gain) (N)
FZ_TIRE_COEFFICIENT(2,2) 227.9999847 ! Coefficient: vertical load per unit tire
                                     !   deflection (N/mm), Axle 2, right side
FZ_TIRE_GAIN(2,2)   1 ! Multiplier for table
FZ_TIRE_OFFSET(2,2) 0 ! vertical load offset added to calculated value (after
                      !   gain) (N)

! F_BOOST_R: Steering boost. The boost force can be computed from torsion bar
! torque and speed. Or, a 1D table can be used involving only torsion bar torque.
! Or, a linear coefficient can be multiplied by torsion bar torque. The value can
! be transformed by a gain. A calculated value can also be given a specified
! offset.

! 2D table: row 1 has "0" (place holder) followed by 6 values of speed (km/h).
! Other rows have torsion bar torque (N-m) followed by 6 values of boost force
! (N).
F_BOOST_R_CARPET(1) ! Axle 1
            0,             0,            20,            50,            80,           120,           200
          -16,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
          -15,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
        -14.5,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
          -14,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
        -13.5,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
          -13,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
        -12.5,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
          -12,         -1250,         -1250,         -1250,         -1250,         -1250,         -1250
        -11.5,         -1250,         -1250,         -1250,         -1250,       -1133.4,      -1070.66
          -11,         -1250,         -1210,      -1213.97,      -1140.43,      -868.065,      -750.255
        -10.5,         -1250,       -1102.5,      -1031.56,      -907.965,      -656.645,       -517.11
          -10,         -1250,         -1000,      -869.625,      -714.895,          -490,          -350
         -9.5,         -1250,        -902.5,      -726.715,      -556.015,      -360.195,      -232.195
           -9,         -1250,          -810,      -601.425,       -426.61,      -260.405,      -150.665
         -8.5,         -1250,        -722.5,       -492.38,        -322.4,      -184.805,        -95.37
           -8,         -1250,          -640,      -398.245,      -239.545,       -128.45,        -58.72
         -7.5,         -1250,        -562.5,       -317.72,        -174.6,        -87.21,        -35.04
           -7,         -1250,          -490,       -249.56,      -124.515,        -57.65,       -20.175
         -6.5,         -1250,        -422.5,      -192.545,         -86.6,       -36.955,       -11.155
           -6,         -1250,          -360,        -145.5,       -58.505,        -22.86,         -5.88
         -5.5,         -1250,        -302.5,        -107.3,       -38.195,       -13.565,         -2.93
           -5,         -1250,          -250,       -76.865,       -23.945,        -7.655,        -1.365
         -4.5,      -1139.06,        -202.5,        -53.16,        -14.29,         -4.07,         -0.59
           -4,          -800,          -160,         -35.2,        -8.025,        -2.005,         -0.23
         -3.5,       -535.94,        -122.5,        -22.06,         -4.17,          -0.9,         -0.08
           -3,        -337.5,           -90,        -12.86,         -1.96,        -0.355,        -0.025
         -2.5,      -195.315,         -62.5,        -6.795,          -0.8,         -0.12,        -0.005
           -2,          -100,           -40,         -3.11,         -0.27,         -0.03,             0
         -1.5,        -42.19,         -22.5,        -1.135,        -0.065,        -0.005,             0
           -1,         -12.5,           -10,        -0.275,         -0.01,             0,             0
         -0.5,        -1.565,          -2.5,        -0.025,             0,             0,             0
            0,             0,             0,             0,             0,             0,             0
          0.5,         1.565,           2.5,         0.025,             0,             0,             0
            1,          12.5,            10,         0.275,          0.01,             0,             0
          1.5,         42.19,          22.5,         1.135,         0.065,         0.005,             0
            2,           100,            40,          3.11,          0.27,          0.03,             0
          2.5,       195.315,          62.5,         6.795,           0.8,          0.12,         0.005
            3,         337.5,            90,         12.86,          1.96,         0.355,         0.025
          3.5,        535.94,         122.5,         22.06,          4.17,           0.9,          0.08
            4,           800,           160,          35.2,         8.025,         2.005,          0.23
          4.5,       1139.06,         202.5,         53.16,         14.29,          4.07,          0.59
            5,          1250,           250,        76.865,        23.945,         7.655,         1.365
          5.5,          1250,         302.5,         107.3,        38.195,        13.565,          2.93
            6,          1250,           360,         145.5,        58.505,         22.86,          5.88
          6.5,          1250,         422.5,       192.545,          86.6,        36.955,        11.155
            7,          1250,           490,        249.56,       124.515,         57.65,        20.175
          7.5,          1250,         562.5,        317.72,         174.6,         87.21,         35.04
            8,          1250,           640,       398.245,       239.545,        128.45,         58.72
          8.5,          1250,         722.5,        492.38,         322.4,       184.805,         95.37
            9,          1250,           810,       601.425,        426.61,       260.405,       150.665
          9.5,          1250,         902.5,       726.715,       556.015,       360.195,       232.195
           10,          1250,          1000,       869.625,       714.895,           490,           350
         10.5,          1250,        1102.5,       1031.56,       907.965,       656.645,        517.11
           11,          1250,          1210,       1213.97,       1140.43,       868.065,       750.255
         11.5,          1250,          1250,          1250,          1250,        1133.4,       1070.66
           12,          1250,          1250,          1250,          1250,          1250,          1250
         12.5,          1250,          1250,          1250,          1250,          1250,          1250
           13,          1250,          1250,          1250,          1250,          1250,          1250
         13.5,          1250,          1250,          1250,          1250,          1250,          1250
           14,          1250,          1250,          1250,          1250,          1250,          1250
         14.5,          1250,          1250,          1250,          1250,          1250,          1250
           15,          1250,          1250,          1250,          1250,          1250,          1250
           16,          1250,          1250,          1250,          1250,          1250,          1250
ENDTABLE
F_BOOST_R_GAIN(1)   1 ! Multiplier for table
F_BOOST_R_OFFSET(1) 0 ! boost force offset added to calculated value (after gain)
                      !   (N)
F_BOOST_R_CONSTANT(2) 0 ! Constant boost force (N), Axle 2
F_BOOST_R_GAIN(2)   1 ! Multiplier for table
F_BOOST_R_OFFSET(2) 0 ! boost force offset added to calculated value (after gain)
                      !   (N)

! F_JNC_STOP: Jounce stop force as a function of suspension compression. The
! spring force can be computed from deflection. Or, a linear coefficient can be
! multiplied by deflection. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_JNC_STOP_TABLE(1,1) LINEAR ! Axle 1, left side
           58,            0
           59,            0
           60,        10000
ENDTABLE
F_JNC_STOP_GAIN(1,1) 1 ! Multiplier for table
F_JNC_STOP_OFFSET(1,1) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_JNC_STOP_TABLE(1,2) LINEAR ! Axle 1, right side
           58,            0
           59,            0
           60,        10000
ENDTABLE
F_JNC_STOP_GAIN(1,2) 1 ! Multiplier for table
F_JNC_STOP_OFFSET(1,2) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_JNC_STOP_TABLE(2,1) LINEAR ! Axle 2, left side
           58,            0
           59,            0
           60,        10000
ENDTABLE
F_JNC_STOP_GAIN(2,1) 1 ! Multiplier for table
F_JNC_STOP_OFFSET(2,1) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_JNC_STOP_TABLE(2,2) LINEAR ! Axle 2, right side
           58,            0
           59,            0
           60,        10000
ENDTABLE
F_JNC_STOP_GAIN(2,2) 1 ! Multiplier for table
F_JNC_STOP_OFFSET(2,2) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! F_REB_STOP: Rebound stop force as a function of suspension compression. The
! spring force can be computed from deflection. Or, a linear coefficient can be
! multiplied by deflection. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_REB_STOP_TABLE(1,1) LINEAR ! Axle 1, left side
          -40,       -10000
          -39,            0
          -38,            0
ENDTABLE
F_REB_STOP_GAIN(1,1) 1 ! Multiplier for table
F_REB_STOP_OFFSET(1,1) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_REB_STOP_TABLE(1,2) LINEAR ! Axle 1, right side
          -40,       -10000
          -39,            0
          -38,            0
ENDTABLE
F_REB_STOP_GAIN(1,2) 1 ! Multiplier for table
F_REB_STOP_OFFSET(1,2) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_REB_STOP_TABLE(2,1) LINEAR ! Axle 2, left side
          -40,       -10000
          -39,            0
          -38,            0
ENDTABLE
F_REB_STOP_GAIN(2,1) 1 ! Multiplier for table
F_REB_STOP_OFFSET(2,1) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! 1D table: col 1 = deflection (mm), col 2 = spring force (N)
F_REB_STOP_TABLE(2,2) LINEAR ! Axle 2, right side
          -40,       -10000
          -39,            0
          -38,            0
ENDTABLE
F_REB_STOP_GAIN(2,2) 1 ! Multiplier for table
F_REB_STOP_OFFSET(2,2) 0 ! spring force offset added to calculated value (after
                         !   gain) (N)

! GEAR_TRANS: Transmission gear vs. time (when MODE_TRANS_TABLE = 1), where [1
! through 18] are choices for forward gears, -1 -> reverse, 0 -> neutral. The
! gear can be computed from time. If tabular, the value can be transformed by a
! gain. A calculated value can also be given a specified offset.
GEAR_TRANS_CONSTANT 1 ! Constant gear (-)
GEAR_TRANS_GAIN     1 ! Multiplier for table
GEAR_TRANS_OFFSET   0 ! gear offset added to calculated value (after gain) (-)

! GENERIC: Generic table function for use in VS command equations:
! GENERIC(col_var, row_var, dataset_id) where row_var is the variable associated
! with each row in the table, and col_var is the variable associated with each
! column in a 2D table. The dataset_id has the range: 1 - 12. The function output
! can be computed from row variable and column variable. Or, a 1D table can be
! used involving only row variable. Or, a linear coefficient can be multiplied by
! row variable. The value can be transformed by a gain. A calculated value can
! also be given a specified offset.
GENERIC_CONSTANT(1) 0 ! Constant function output (-)
GENERIC_GAIN(1)     1 ! Multiplier for table
GENERIC_OFFSET(1)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(2) 0 ! Constant function output (-)
GENERIC_GAIN(2)     1 ! Multiplier for table
GENERIC_OFFSET(2)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(3) 0 ! Constant function output (-)
GENERIC_GAIN(3)     1 ! Multiplier for table
GENERIC_OFFSET(3)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(4) 0 ! Constant function output (-)
GENERIC_GAIN(4)     1 ! Multiplier for table
GENERIC_OFFSET(4)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(5) 0 ! Constant function output (-)
GENERIC_GAIN(5)     1 ! Multiplier for table
GENERIC_OFFSET(5)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(6) 0 ! Constant function output (-)
GENERIC_GAIN(6)     1 ! Multiplier for table
GENERIC_OFFSET(6)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(7) 0 ! Constant function output (-)
GENERIC_GAIN(7)     1 ! Multiplier for table
GENERIC_OFFSET(7)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(8) 0 ! Constant function output (-)
GENERIC_GAIN(8)     1 ! Multiplier for table
GENERIC_OFFSET(8)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(9) 0 ! Constant function output (-)
GENERIC_GAIN(9)     1 ! Multiplier for table
GENERIC_OFFSET(9)   0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(10) 0 ! Constant function output (-)
GENERIC_GAIN(10)    1 ! Multiplier for table
GENERIC_OFFSET(10)  0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(11) 0 ! Constant function output (-)
GENERIC_GAIN(11)    1 ! Multiplier for table
GENERIC_OFFSET(11)  0 ! function output offset added to calculated value (after
                      !   gain) (-)
GENERIC_CONSTANT(12) 0 ! Constant function output (-)
GENERIC_GAIN(12)    1 ! Multiplier for table
GENERIC_OFFSET(12)  0 ! function output offset added to calculated value (after
                      !   gain) (-)

! INV_CAP_TC: Inverse of torque converter capacity vs. speed ratio of torque
! converter output shaft to engine. The 1/K (K = torque converter capacity) can
! be computed from speed ratio. Or, a linear coefficient can be multiplied by
! speed ratio. If tabular, the value can be transformed by a gain. A calculated
! value can also be given a specified offset.

! 1D table: col 1 = speed ratio (-), col 2 = 1/K (K = torque converter capacity) (Kinv)
INV_CAP_TC_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
            0,     0.006425
          0.1,     0.006425
          0.2,     0.006425
          0.3,     0.006425
          0.4,     0.006424
          0.5,     0.006419
          0.6,     0.006386
          0.7,     0.006243
          0.8,     0.005735
          0.9,     0.004185
         0.95,     0.002578
         0.99,     0.000614
         1.01,    -0.000614
         1.05,    -0.002578
          1.1,    -0.004185
          1.2,    -0.005735
          1.3,    -0.006243
          1.4,    -0.006386
          1.5,    -0.006419
          1.6,    -0.006424
          1.7,    -0.006425
          1.8,    -0.006425
          1.9,    -0.006425
            2,    -0.006425
ENDTABLE
INV_CAP_TC_GAIN     1 ! Multiplier for table
INV_CAP_TC_OFFSET   0 ! 1/K (K = torque converter capacity) offset added to
                      !   calculated value (after gain) (Kinv)

! KGAMMA: Tire inclination stiffness vs. dynamic tire load. The dFy/dGamma can
! be computed from tire load. Or, a linear coefficient can be multiplied by tire
! load. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.

! 1D table: col 1 = tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(1,1) LINEAR ! Axle 1, left side
            0,        -9.75
          500,     -3.82897
         1000,      1.19863
         1500,      5.78424
         2000,      10.0253
         2500,      14.0193
         3000,      17.8638
         3500,      21.6561
         4000,      25.4939
         4500,      29.4744
         5000,      33.6952
ENDTABLE
KGAMMA_GAIN(1,1)    1 ! Multiplier for table
KGAMMA_OFFSET(1,1)  0 ! dFy/dGamma offset added to calculated value (after gain)
                      !   (N/deg)

! 1D table: col 1 = tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(1,2) LINEAR ! Axle 1, right side
            0,        -9.75
          500,     -3.82897
         1000,      1.19863
         1500,      5.78424
         2000,      10.0253
         2500,      14.0193
         3000,      17.8638
         3500,      21.6561
         4000,      25.4939
         4500,      29.4744
         5000,      33.6952
ENDTABLE
KGAMMA_GAIN(1,2)    1 ! Multiplier for table
KGAMMA_OFFSET(1,2)  0 ! dFy/dGamma offset added to calculated value (after gain)
                      !   (N/deg)

! 1D table: col 1 = tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(2,1) LINEAR ! Axle 2, left side
            0,        -9.75
          500,     -3.82897
         1000,      1.19863
         1500,      5.78424
         2000,      10.0253
         2500,      14.0193
         3000,      17.8638
         3500,      21.6561
         4000,      25.4939
         4500,      29.4744
         5000,      33.6952
ENDTABLE
KGAMMA_GAIN(2,1)    1 ! Multiplier for table
KGAMMA_OFFSET(2,1)  0 ! dFy/dGamma offset added to calculated value (after gain)
                      !   (N/deg)

! 1D table: col 1 = tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(2,2) LINEAR ! Axle 2, right side
            0,        -9.75
          500,     -3.82897
         1000,      1.19863
         1500,      5.78424
         2000,      10.0253
         2500,      14.0193
         3000,      17.8638
         3500,      21.6561
         4000,      25.4939
         4500,      29.4744
         5000,      33.6952
ENDTABLE
KGAMMA_GAIN(2,2)    1 ! Multiplier for table
KGAMMA_OFFSET(2,2)  0 ! dFy/dGamma offset added to calculated value (after gain)
                      !   (N/deg)

! LTARG: Target lateral offset (+ -> left, - -> right). This offset is combined
! with the path input (X, Y coordinates) to produce a modified target path that
! the driver model attempts to follow by steering the vehicle. The lateral offset
! can be computed from path station. Or, a linear coefficient can be multiplied
! by path station. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.

! 1D table: col 1 = path station (m), col 2 = lateral offset (m)
LTARG_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
            0,            0
           65,            0
           70,          0.1
           75,          0.7
           80,          1.8
           85,          2.8
           90,          3.4
           95,          3.5
          120,          3.5
          125,          3.3
          130,          2.4
          135,          1.1
          140,          0.2
          145,            0
          150,            0
ENDTABLE
LTARG_GAIN          1 ! Multiplier for table
LTARG_OFFSET        0 ! lateral offset offset added to calculated value (after
                      !   gain) (m)

! MENGINE: Engine torque applied to crankshaft by pistons as a function of
! throttle position and engine speed. The engine torque can be computed from
! engine speed and throttle position. Or, a 1D table can be used involving only
! engine speed. The value can be transformed by a gain. A calculated value can
! also be given a specified offset.

! 2D table: row 1 has "0" (place holder) followed by 10 values of throttle
! position (-). Other rows have engine speed (rpm) followed by 10 values of
! engine torque (N-m).
MENGINE_CARPET 
            0,             0,           0.1,          0.15,           0.2,          0.35,           0.5,           0.7,          0.85,          0.95,             1
            0,             0,             0,             0,             0,             0,             0,             0,             0,             0,             0
      86.6667,            15,        64.064,        85.328,        87.064,        88.048,        88.536,        88.704,        88.744,        88.768,        88.744
      173.333,            18,        78.176,        117.56,       125.544,       126.824,       127.344,       127.528,       127.544,       127.544,       127.544
      433.333,            20,        59.448,        146.12,       167.224,         175.6,       178.464,       179.536,       179.632,       179.608,       179.536
          750,            25,         39.66,       138.648,       172.668,       186.152,       191.204,       193.676,       194.252,       194.628,       194.892
      866.667,            15,            35,       131.176,       178.112,       196.704,       203.944,       207.816,       208.872,       209.648,       210.248
         1300,       -16.976,        -4.152,        99.032,        171.44,           207,        222.12,       228.256,       229.168,       229.552,       229.696
      1733.33,       -21.312,        -5.392,        68.432,       153.264,        203.92,       224.744,        233.48,       235.048,       235.688,       235.904
      2166.67,       -25.368,        -12.76,         47.48,       129.208,       196.232,       227.192,       240.088,       242.256,       243.152,       243.456
         2600,       -28.944,       -18.568,        31.704,       103.104,       188.088,       235.224,       256.704,       260.488,       262.104,       262.664
      3033.33,       -32.464,       -23.656,        19.768,        81.256,       169.224,       228.608,       258.416,       263.984,       266.424,       267.304
      3466.67,           -36,       -28.376,         9.936,        64.328,        146.76,        209.28,       242.344,       248.584,       251.288,       252.232
         3900,       -39.736,       -33.144,         0.232,         48.36,       126.464,       199.744,       241.768,        249.96,         253.6,       254.952
      4333.33,       -43.624,       -37.888,        -8.392,        34.672,       105.272,       185.448,       236.488,           247,       251.784,         253.6
      4766.67,        -47.76,       -42.568,       -16.064,         22.72,        86.408,       167.472,       224.528,       236.784,       242.456,        244.64
         5200,       -51.912,       -47.344,       -23.176,         12.16,        70.304,        148.64,       207.776,       220.816,       226.968,       229.368
      5633.33,        -56.56,       -52.328,       -30.064,         2.376,         55.72,       129.024,       186.376,       199.088,       205.056,       207.416
      6066.67,       -61.624,       -57.584,       -36.936,        -6.872,        42.408,       109.984,       163.184,       175.016,       180.576,       182.704
         6500,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6,         -61.6
ENDTABLE
MENGINE_GAIN        1 ! Multiplier for table
MENGINE_OFFSET      0 ! engine torque offset added to calculated value (after
                      !   gain) (N-m)

! MODE_TRANS: Transmission mode vs. time.  -1 -> reverse, 0 -> neutral, 1 ->
! manual (using GEAR_TRANS_TABLE), 2 through 18 -> automatic, using gears 1 up to
! specified limit. The transmission mode can be computed from time. If tabular,
! the value can be transformed by a gain. A calculated value can also be given a
! specified offset.
MODE_TRANS_CONSTANT 6 ! Constant transmission mode (-)
MODE_TRANS_GAIN     1 ! Multiplier for table
MODE_TRANS_OFFSET   0 ! transmission mode offset added to calculated value (after
                      !   gain) (-)

! MU_ROAD: Tire/road friction coefficient (MU) as a function of station S and
! lateral position L (L increases to the right when looking back toward station
! 0). Use MU = -1 for original tire data (no scaling). The MU can be computed
! from station and lateral position. Or, a 1D table can be used involving only
! station. The value can be transformed by a gain. A calculated value can also be
! given a specified offset.
MU_ROAD_CONSTANT 0.8500000238 ! Constant MU (-)
MU_ROAD_GAIN        1 ! Multiplier for table
MU_ROAD_OFFSET      0 ! MU offset added to calculated value (after gain) (-)

! MX_AERO_SHAPING: Shaping function for X component of aerodynamic moment. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
MX_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,      -0.0038
          -78,      -0.0147
          -72,      -0.0317
          -66,      -0.0532
          -60,       -0.077
          -54,      -0.1008
          -48,      -0.1223
          -42,      -0.1393
          -36,      -0.1502
          -30,       -0.154
          -20,       -0.154
           20,        0.154
           30,        0.154
           36,       0.1502
           42,       0.1393
           48,       0.1223
           54,       0.1008
           60,        0.077
           66,       0.0532
           72,       0.0317
           78,       0.0147
           84,       0.0038
           90,            0
ENDTABLE
MX_AERO_SHAPING_GAIN 1 ! Multiplier for table
MX_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! MX_AERO_SHAPING_2: Coefficient for X component of aerodynamic moment. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
MX_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
MX_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
MX_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! MX_AUX: Auxiliary roll moment (exerted on axle) as a function of axle roll
! (relative to sprung mass) and static axle load (at ground). The auxiliary roll
! moment can be computed from relative axle roll and static axle load. Or, a 1D
! table can be used involving only relative axle roll. Or, a linear coefficient
! can be multiplied by relative axle roll. The value can be transformed by a
! gain. A calculated value can also be given a specified offset.
MX_AUX_COEFFICIENT(1) 384 ! Coefficient: auxiliary roll moment per unit relative
                          !   axle roll (N-m/deg)
MX_AUX_GAIN(1)      1 ! Multiplier for table
MX_AUX_OFFSET(1)    0 ! auxiliary roll moment offset added to calculated value
                      !   (after gain) (N-m)

! 1D table: col 1 = relative axle roll (deg), col 2 = auxiliary roll moment (N-m)
MX_AUX_TABLE(2) LINEAR ! linear interpolation and extrapolation
          -10,      -4490.6
           -9,     -3826.87
           -8,      -3245.1
           -7,     -2727.23
           -6,     -2259.33
           -5,     -1830.39
           -4,     -1431.45
           -3,     -1055.06
           -2,     -694.761
           -1,      -344.84
            0,            0
            1,       344.84
            2,      694.761
            3,      1055.06
            4,      1431.45
            5,      1830.39
            6,      2259.33
            7,      2727.23
            8,       3245.1
            9,      3826.87
           10,       4490.6
ENDTABLE
MX_AUX_GAIN(2)      1 ! Multiplier for table
MX_AUX_OFFSET(2)    0 ! auxiliary roll moment offset added to calculated value
                      !   (after gain) (N-m)

! MY_AERO_SHAPING: Shaping function for Y component of aerodynamic moment. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
MY_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,       0.0044
          -78,       0.0172
          -72,       0.0371
          -66,       0.0622
          -60,         0.09
          -54,       0.1178
          -48,       0.1429
          -42,       0.1628
          -36,       0.1756
          -30,         0.18
          -20,      0.18001
          -18,     0.165844
          -16,     0.153168
          -14,     0.141984
          -12,     0.132292
          -10,      0.12409
           -8,      0.11738
           -6,      0.11216
           -4,     0.108432
           -2,     0.106196
            0,      0.10545
            2,     0.106196
            4,     0.108432
            6,      0.11216
            8,      0.11738
           10,      0.12409
           12,     0.132292
           14,     0.141984
           16,     0.153168
           18,     0.165844
           20,      0.18001
           30,         0.18
           36,       0.1756
           42,       0.1628
           48,       0.1429
           54,       0.1178
           60,         0.09
           66,       0.0622
           72,       0.0371
           78,       0.0172
           84,       0.0044
           90,            0
ENDTABLE
MY_AERO_SHAPING_GAIN 1 ! Multiplier for table
MY_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! MY_AERO_SHAPING_2: Coefficient for Y component of aerodynamic moment. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
MY_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
MY_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
MY_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! MY_BRAKE: Brake torque at wheel. The brake torque can be computed from wheel
! cylinder pressure. Or, a linear coefficient can be multiplied by wheel cylinder
! pressure. If tabular, the value can be transformed by a gain. A calculated
! value can also be given a specified offset.
MY_BRAKE_COEFFICIENT(1,1) 300 ! Coefficient: brake torque per unit wheel cylinder
                              !   pressure (N-m/MPa), Axle 1, left side
MY_BRAKE_GAIN(1,1)  1 ! Multiplier for table
MY_BRAKE_OFFSET(1,1) 0 ! brake torque offset added to calculated value (after
                       !   gain) (N-m)
MY_BRAKE_COEFFICIENT(1,2) 300 ! Coefficient: brake torque per unit wheel cylinder
                              !   pressure (N-m/MPa), Axle 1, right side
MY_BRAKE_GAIN(1,2)  1 ! Multiplier for table
MY_BRAKE_OFFSET(1,2) 0 ! brake torque offset added to calculated value (after
                       !   gain) (N-m)
MY_BRAKE_COEFFICIENT(2,1) 200 ! Coefficient: brake torque per unit wheel cylinder
                              !   pressure (N-m/MPa), Axle 2, left side
MY_BRAKE_GAIN(2,1)  1 ! Multiplier for table
MY_BRAKE_OFFSET(2,1) 0 ! brake torque offset added to calculated value (after
                       !   gain) (N-m)
MY_BRAKE_COEFFICIENT(2,2) 200 ! Coefficient: brake torque per unit wheel cylinder
                              !   pressure (N-m/MPa), Axle 2, right side
MY_BRAKE_GAIN(2,2)  1 ! Multiplier for table
MY_BRAKE_OFFSET(2,2) 0 ! brake torque offset added to calculated value (after
                       !   gain) (N-m)

! MZ_AERO_SHAPING: Shaping function for Z component of aerodynamic moment. The
! shaping function can be computed from aerodynamic slip angle. Or, a linear
! coefficient can be multiplied by aerodynamic slip angle. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = shaping function (-)
MZ_AERO_SHAPING_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
          -90,            0
          -84,      -0.0045
          -78,      -0.0175
          -72,      -0.0378
          -66,      -0.0634
          -60,      -0.0918
          -54,      -0.1202
          -48,      -0.1458
          -42,      -0.1661
          -36,      -0.1791
          -30,      -0.1836
          -20,      -0.1836
           20,       0.1836
           30,       0.1836
           36,       0.1791
           42,       0.1661
           48,       0.1458
           54,       0.1202
           60,       0.0918
           66,       0.0634
           72,       0.0378
           78,       0.0175
           84,       0.0045
           90,            0
ENDTABLE
MZ_AERO_SHAPING_GAIN 1 ! Multiplier for table
MZ_AERO_SHAPING_OFFSET 0 ! shaping function offset added to calculated value
                         !   (after gain) (-)

! MZ_AERO_SHAPING_2: Coefficient for Z component of aerodynamic moment. The
! coefficient can be computed from pitch and ride height. Or, a 1D table can be
! used involving only pitch. Or, a linear coefficient can be multiplied by pitch.
! The value can be transformed by a gain. A calculated value can also be given a
! specified offset.
MZ_AERO_SHAPING_2_CONSTANT 1 ! Constant coefficient (-)
MZ_AERO_SHAPING_2_GAIN 1 ! Multiplier for table
MZ_AERO_SHAPING_2_OFFSET 0 ! coefficient offset added to calculated value (after
                           !   gain) (-)

! MZ_PARKING_STEER: Speed sensitive steering torque for parking and near-zero
! speed conditions. The steering torque at kingpin can be computed from vehicle
! speed and vertical load. Or, a 1D table can be used involving only vehicle
! speed. The value can be transformed by a gain. A calculated value can also be
! given a specified offset.
MZ_PARKING_STEER_CONSTANT(1,1) 0 ! Constant steering torque at kingpin (N-m), Axle
                                 !   1, left side
MZ_PARKING_STEER_GAIN(1,1) 1 ! Multiplier for table
MZ_PARKING_STEER_OFFSET(1,1) 0 ! steering torque at kingpin offset added to
                               !   calculated value (after gain) (N-m)
MZ_PARKING_STEER_CONSTANT(1,2) 0 ! Constant steering torque at kingpin (N-m), Axle
                                 !   1, right side
MZ_PARKING_STEER_GAIN(1,2) 1 ! Multiplier for table
MZ_PARKING_STEER_OFFSET(1,2) 0 ! steering torque at kingpin offset added to
                               !   calculated value (after gain) (N-m)
MZ_PARKING_STEER_CONSTANT(2,1) 0 ! Constant steering torque at kingpin (N-m), Axle
                                 !   2, left side
MZ_PARKING_STEER_GAIN(2,1) 1 ! Multiplier for table
MZ_PARKING_STEER_OFFSET(2,1) 0 ! steering torque at kingpin offset added to
                               !   calculated value (after gain) (N-m)
MZ_PARKING_STEER_CONSTANT(2,2) 0 ! Constant steering torque at kingpin (N-m), Axle
                                 !   2, right side
MZ_PARKING_STEER_GAIN(2,2) 1 ! Multiplier for table
MZ_PARKING_STEER_OFFSET(2,2) 0 ! steering torque at kingpin offset added to
                               !   calculated value (after gain) (N-m)

! MZ_TIRE: Tire aligning moment (Mz) as a function of vertical load (Fz) and
! lateral slip (Alpha). The Mz can be computed from Alpha and Fz (vertical load).
! (Note: a row and column of zeros are automatically inserted to force Mz to zero
! when either Alpha or Fz (vertical load) go to zero.) The value can be
! transformed by a gain.

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Mz (N-m).
MZ_TIRE_CARPET(1,1) ! Axle 1, left side
            0,       1715.32,       3430.65,       5145.97,       6861.29,       8576.62
          0.5,       4.32126,       17.9612,       38.2152,       63.1602,       91.1374
            1,        7.6705,       31.9816,        68.221,       113.103,       163.891
          1.5,       9.27645,       39.0393,       83.7311,        139.76,       204.209
            2,       9.32928,       39.8951,        86.309,       145.528,       215.281
          2.5,       8.26217,       36.2289,       79.4521,       135.956,       204.652
            3,       6.49774,       29.7417,       66.6362,       116.579,       179.855
          3.5,       4.45861,        22.124,       51.3691,       92.9441,       148.402
            4,        2.5674,       15.0557,       37.1586,       70.5877,       117.826
          4.5,       1.15163,       9.88924,       26.7305,       53.8837,       94.1274
            5,      0.190178,       6.49774,       19.8841,        42.547,       77.1699
          5.5,     -0.412052,       4.43748,       15.6263,       35.1406,       65.2838
            6,     -0.771277,       3.22246,       12.9955,       30.2171,       56.7892
          6.5,      -1.00372,       2.38779,       11.0092,       26.3291,       50.0379
            7,      -1.20446,       1.47916,       8.70592,       22.0395,       43.3394
          7.5,      -1.45803,      0.158481,        5.4095,       16.3342,        35.521
            8,      -1.73273,      -1.36294,       1.62708,       10.0055,       27.3222
          8.5,       -1.9863,      -2.74701,      -1.80669,         4.279,       20.0109
            9,      -2.15535,      -3.65564,      -4.09939,       2.64136,        10.576
          9.5,      -2.17648,      -3.74016,      -4.41635,       1.05654,       5.28272
           10,      -3.16963,      -4.22617,      -5.28272,             0,             0
           11,      -3.16963,      -4.22617,      -5.28272,             0,             0
ENDTABLE
MZ_TIRE_GAIN(1,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Mz (N-m).
MZ_TIRE_CARPET(1,2) ! Axle 1, right side
            0,       1715.32,       3430.65,       5145.97,       6861.29,       8576.62
          0.5,       4.32126,       17.9612,       38.2152,       63.1602,       91.1374
            1,        7.6705,       31.9816,        68.221,       113.103,       163.891
          1.5,       9.27645,       39.0393,       83.7311,        139.76,       204.209
            2,       9.32928,       39.8951,        86.309,       145.528,       215.281
          2.5,       8.26217,       36.2289,       79.4521,       135.956,       204.652
            3,       6.49774,       29.7417,       66.6362,       116.579,       179.855
          3.5,       4.45861,        22.124,       51.3691,       92.9441,       148.402
            4,        2.5674,       15.0557,       37.1586,       70.5877,       117.826
          4.5,       1.15163,       9.88924,       26.7305,       53.8837,       94.1274
            5,      0.190178,       6.49774,       19.8841,        42.547,       77.1699
          5.5,     -0.412052,       4.43748,       15.6263,       35.1406,       65.2838
            6,     -0.771277,       3.22246,       12.9955,       30.2171,       56.7892
          6.5,      -1.00372,       2.38779,       11.0092,       26.3291,       50.0379
            7,      -1.20446,       1.47916,       8.70592,       22.0395,       43.3394
          7.5,      -1.45803,      0.158481,        5.4095,       16.3342,        35.521
            8,      -1.73273,      -1.36294,       1.62708,       10.0055,       27.3222
          8.5,       -1.9863,      -2.74701,      -1.80669,         4.279,       20.0109
            9,      -2.15535,      -3.65564,      -4.09939,       2.64136,        10.576
          9.5,      -2.17648,      -3.74016,      -4.41635,       1.05654,       5.28272
           10,      -3.16963,      -4.22617,      -5.28272,             0,             0
           11,      -3.16963,      -4.22617,      -5.28272,             0,             0
ENDTABLE
MZ_TIRE_GAIN(1,2)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Mz (N-m).
MZ_TIRE_CARPET(2,1) ! Axle 2, left side
            0,       1715.32,       3430.65,       5145.97,       6861.29,       8576.62
          0.5,       4.32126,       17.9612,       38.2152,       63.1602,       91.1374
            1,        7.6705,       31.9816,        68.221,       113.103,       163.891
          1.5,       9.27645,       39.0393,       83.7311,        139.76,       204.209
            2,       9.32928,       39.8951,        86.309,       145.528,       215.281
          2.5,       8.26217,       36.2289,       79.4521,       135.956,       204.652
            3,       6.49774,       29.7417,       66.6362,       116.579,       179.855
          3.5,       4.45861,        22.124,       51.3691,       92.9441,       148.402
            4,        2.5674,       15.0557,       37.1586,       70.5877,       117.826
          4.5,       1.15163,       9.88924,       26.7305,       53.8837,       94.1274
            5,      0.190178,       6.49774,       19.8841,        42.547,       77.1699
          5.5,     -0.412052,       4.43748,       15.6263,       35.1406,       65.2838
            6,     -0.771277,       3.22246,       12.9955,       30.2171,       56.7892
          6.5,      -1.00372,       2.38779,       11.0092,       26.3291,       50.0379
            7,      -1.20446,       1.47916,       8.70592,       22.0395,       43.3394
          7.5,      -1.45803,      0.158481,        5.4095,       16.3342,        35.521
            8,      -1.73273,      -1.36294,       1.62708,       10.0055,       27.3222
          8.5,       -1.9863,      -2.74701,      -1.80669,         4.279,       20.0109
            9,      -2.15535,      -3.65564,      -4.09939,       2.64136,        10.576
          9.5,      -2.17648,      -3.74016,      -4.41635,       1.05654,       5.28272
           10,      -3.16963,      -4.22617,      -5.28272,             0,             0
           11,      -3.16963,      -4.22617,      -5.28272,             0,             0
ENDTABLE
MZ_TIRE_GAIN(2,1)   1 ! Multiplier for table

! 2D table: row 1 has "0" (place holder) followed by 5 values of Fz (vertical
! load) (N). Other rows have Alpha (deg) followed by 5 values of Mz (N-m).
MZ_TIRE_CARPET(2,2) ! Axle 2, right side
            0,       1715.32,       3430.65,       5145.97,       6861.29,       8576.62
          0.5,       4.32126,       17.9612,       38.2152,       63.1602,       91.1374
            1,        7.6705,       31.9816,        68.221,       113.103,       163.891
          1.5,       9.27645,       39.0393,       83.7311,        139.76,       204.209
            2,       9.32928,       39.8951,        86.309,       145.528,       215.281
          2.5,       8.26217,       36.2289,       79.4521,       135.956,       204.652
            3,       6.49774,       29.7417,       66.6362,       116.579,       179.855
          3.5,       4.45861,        22.124,       51.3691,       92.9441,       148.402
            4,        2.5674,       15.0557,       37.1586,       70.5877,       117.826
          4.5,       1.15163,       9.88924,       26.7305,       53.8837,       94.1274
            5,      0.190178,       6.49774,       19.8841,        42.547,       77.1699
          5.5,     -0.412052,       4.43748,       15.6263,       35.1406,       65.2838
            6,     -0.771277,       3.22246,       12.9955,       30.2171,       56.7892
          6.5,      -1.00372,       2.38779,       11.0092,       26.3291,       50.0379
            7,      -1.20446,       1.47916,       8.70592,       22.0395,       43.3394
          7.5,      -1.45803,      0.158481,        5.4095,       16.3342,        35.521
            8,      -1.73273,      -1.36294,       1.62708,       10.0055,       27.3222
          8.5,       -1.9863,      -2.74701,      -1.80669,         4.279,       20.0109
            9,      -2.15535,      -3.65564,      -4.09939,       2.64136,        10.576
          9.5,      -2.17648,      -3.74016,      -4.41635,       1.05654,       5.28272
           10,      -3.16963,      -4.22617,      -5.28272,             0,             0
           11,      -3.16963,      -4.22617,      -5.28272,             0,             0
ENDTABLE
MZ_TIRE_GAIN(2,2)   1 ! Multiplier for table

! M_DIFF_VISC: Torque from viscous differential. The speed and torque
! differences are either [left - right] (half-shaft) or [front - rear]
! (driveshaft). The torque difference can be computed from speed difference. Or,
! a linear coefficient can be multiplied by speed difference. If tabular, the
! value can be transformed by a gain. A calculated value can also be given a
! specified offset.

! 1D table: col 1 = speed difference (rpm), col 2 = torque difference (N-m)
M_DIFF_VISC_TABLE(1) SPLINE ! front differential
        -1200,       402.88
        -1080,       382.21
         -960,       360.35
         -840,       337.07
         -720,       312.07
         -600,       284.88
         -540,       270.26
         -480,        254.8
         -420,       238.35
         -360,       220.67
         -300,       201.44
         -240,       180.17
         -180,       156.03
         -120,        127.4
          -60,        90.09
            0,            0
           60,       -90.09
          120,       -127.4
          180,      -156.03
          240,      -180.17
          300,      -201.44
          360,      -220.67
          420,      -238.35
          480,       -254.8
          540,      -270.26
          600,      -284.88
          720,      -312.07
          840,      -337.07
          960,      -360.35
         1080,      -382.21
         1200,      -402.88
ENDTABLE
M_DIFF_VISC_GAIN(1) 1 ! Multiplier for table
M_DIFF_VISC_OFFSET(1) 0 ! torque difference offset added to calculated value
                        !   (after gain) (N-m)

! M_TRANS_AV: Transmission output torque as a function of torsional speed. This
! torsional damping represents for the entire driveline.. The transmission torque
! can be computed from torsional speed. Or, a linear coefficient can be
! multiplied by torsional speed. If tabular, the value can be transformed by a
! gain. A calculated value can also be given a specified offset.
M_TRANS_AV_CONSTANT 0 ! Constant transmission torque (N-m)
M_TRANS_AV_GAIN     1 ! Multiplier for table
M_TRANS_AV_OFFSET   0 ! transmission torque offset added to calculated value
                      !   (after gain) (N-m)

! M_TRANS_ROT: Transmission output torque as a function of torsional deflection.
! This torsional flex represents the compliance of entire driveline.. The
! transmission torque can be computed from torsional deflection. Or, a linear
! coefficient can be multiplied by torsional deflection. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.
M_TRANS_ROT_CONSTANT 0 ! Constant transmission torque (N-m)
M_TRANS_ROT_GAIN    1 ! Multiplier for table
M_TRANS_ROT_OFFSET  0 ! transmission torque offset added to calculated value
                      !   (after gain) (N-m)

! PBK_CON: Brake control pressure (master cylinder). The brake pressure can be
! computed from time. Or, a linear coefficient can be multiplied by time. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.
PBK_CON_CONSTANT    0 ! Constant brake pressure (MPa)
PBK_CON_GAIN        1 ! Multiplier for table
PBK_CON_OFFSET      0 ! brake pressure offset added to calculated value (after
                      !   gain) (MPa)

! PBK_DL: Brake delivery pressure (proportioning valve). The delivery pressure
! can be computed from master cylinder pressure and dynamic wheel load. Or, a 1D
! table can be used involving only master cylinder pressure. Or, a linear
! coefficient can be multiplied by master cylinder pressure. The value can be
! transformed by a gain. A calculated value can also be given a specified offset.
PBK_DL_COEFFICIENT(1,1) 1 ! Coefficient: delivery pressure per unit master
                          !   cylinder pressure (MPa/MPa), Axle 1, left side
PBK_DL_GAIN(1,1)    1 ! Multiplier for table
PBK_DL_OFFSET(1,1)  0 ! delivery pressure offset added to calculated value (after
                      !   gain) (MPa)
PBK_DL_COEFFICIENT(1,2) 1 ! Coefficient: delivery pressure per unit master
                          !   cylinder pressure (MPa/MPa), Axle 1, right side
PBK_DL_GAIN(1,2)    1 ! Multiplier for table
PBK_DL_OFFSET(1,2)  0 ! delivery pressure offset added to calculated value (after
                      !   gain) (MPa)

! 2D table: row 1 has "0" (place holder) followed by 2 values of dynamic wheel
! load (N). Other rows have master cylinder pressure (MPa) followed by 2 values
! of delivery pressure (MPa).
PBK_DL_CARPET(2,1) ! Axle 2, left side
            0,          1000,          2000
            0,             0,             0
          2.5,           2.5,           2.5
          3.5,           2.8,           2.8
ENDTABLE
PBK_DL_GAIN(2,1)    1 ! Multiplier for table
PBK_DL_OFFSET(2,1)  0 ! delivery pressure offset added to calculated value (after
                      !   gain) (MPa)

! 2D table: row 1 has "0" (place holder) followed by 2 values of dynamic wheel
! load (N). Other rows have master cylinder pressure (MPa) followed by 2 values
! of delivery pressure (MPa).
PBK_DL_CARPET(2,2) ! Axle 2, right side
            0,          1000,          2000
            0,             0,             0
          2.5,           2.5,           2.5
          3.5,           2.8,           2.8
ENDTABLE
PBK_DL_GAIN(2,2)    1 ! Multiplier for table
PBK_DL_OFFSET(2,2)  0 ! delivery pressure offset added to calculated value (after
                      !   gain) (MPa)

! RACK_KIN: Nonlinear steering system kinematics: steer angle at the road wheel
! as a function of steering rack displacement. The road wheel steer can be
! computed from rack displacement. Or, a linear coefficient can be multiplied by
! rack displacement. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.

! 1D table: col 1 = rack displacement (mm), col 2 = road wheel steer (deg)
RACK_KIN_TABLE(1,1) LINEAR ! Axle 1, left side
     -68.7467,     -35.7972
     -66.1026,     -34.3045
     -63.6543,      -32.955
      -61.381,     -31.7259
     -59.2644,     -30.5991
     -57.2889,     -29.5607
     -55.4409,     -28.5993
     -53.7083,     -27.7056
     -52.0808,     -26.8719
      -50.549,     -26.0918
     -49.1048,     -25.3597
     -47.7407,     -24.6709
     -46.4505,     -24.0214
     -45.2281,     -23.4076
     -44.0684,     -22.8265
     -42.9667,     -22.2753
     -41.9187,     -21.7516
     -40.9206,     -21.2533
      -39.969,     -20.7785
     -39.0606,     -20.3255
     -38.1926,     -19.8926
     -37.3623,     -19.4787
     -36.5674,     -19.0823
     -35.8056,     -18.7023
     -35.0748,     -18.3377
     -34.3733,     -17.9875
            0,            0
      34.3733,      21.9366
      35.0748,      22.4508
      35.8056,      22.9899
      36.5674,      23.5556
      37.3623,      24.1502
      38.1926,      24.7758
      39.0606,      25.4349
       39.969,      26.1303
      40.9206,      26.8652
      41.9187,      27.6429
      42.9667,      28.4673
      44.0684,      29.3429
      45.2281,      30.2744
      46.4505,      31.2676
      47.7407,      32.3286
      49.1048,      33.4648
       50.549,      34.6845
      52.0808,      35.9971
      53.7083,      37.4138
      55.4409,      38.9476
      57.2889,      40.6136
      59.2644,      42.4299
       61.381,      44.4178
      63.6543,      46.6034
      66.1026,      49.0183
      68.7467,      51.7017
ENDTABLE
RACK_KIN_GAIN(1,1)  1 ! Multiplier for table
RACK_KIN_OFFSET(1,1) 0 ! road wheel steer offset added to calculated value (after
                       !   gain) (deg)

! 1D table: col 1 = rack displacement (mm), col 2 = road wheel steer (deg)
RACK_KIN_TABLE(1,2) LINEAR ! Axle 1, right side
     -68.7467,     -51.7017
     -66.1026,     -49.0183
     -63.6543,     -46.6034
      -61.381,     -44.4178
     -59.2644,     -42.4299
     -57.2889,     -40.6136
     -55.4409,     -38.9476
     -53.7083,     -37.4138
     -52.0808,     -35.9971
      -50.549,     -34.6845
     -49.1048,     -33.4648
     -47.7407,     -32.3286
     -46.4505,     -31.2676
     -45.2281,     -30.2744
     -44.0684,     -29.3429
     -42.9667,     -28.4673
     -41.9187,     -27.6429
     -40.9206,     -26.8652
      -39.969,     -26.1303
     -39.0606,     -25.4349
     -38.1926,     -24.7758
     -37.3623,     -24.1502
     -36.5674,     -23.5556
     -35.8056,     -22.9899
     -35.0748,     -22.4508
     -34.3733,     -21.9366
            0,            0
      34.3733,      17.9875
      35.0748,      18.3377
      35.8056,      18.7023
      36.5674,      19.0823
      37.3623,      19.4787
      38.1926,      19.8926
      39.0606,      20.3255
       39.969,      20.7785
      40.9206,      21.2533
      41.9187,      21.7516
      42.9667,      22.2753
      44.0684,      22.8265
      45.2281,      23.4076
      46.4505,      24.0214
      47.7407,      24.6709
      49.1048,      25.3597
       50.549,      26.0918
      52.0808,      26.8719
      53.7083,      27.7056
      55.4409,      28.5993
      57.2889,      29.5607
      59.2644,      30.5991
       61.381,      31.7259
      63.6543,       32.955
      66.1026,      34.3045
      68.7467,      35.7972
ENDTABLE
RACK_KIN_GAIN(1,2)  1 ! Multiplier for table
RACK_KIN_OFFSET(1,2) 0 ! road wheel steer offset added to calculated value (after
                       !   gain) (deg)
RACK_KIN_COEFFICIENT(2,1) 0.6000000238 ! Coefficient: road wheel steer per unit
                                       !   rack displacement (deg/mm), Axle 2,
                                       !   left side
RACK_KIN_GAIN(2,1)  1 ! Multiplier for table
RACK_KIN_OFFSET(2,1) 0 ! road wheel steer offset added to calculated value (after
                       !   gain) (deg)
RACK_KIN_COEFFICIENT(2,2) 0.6000000238 ! Coefficient: road wheel steer per unit
                                       !   rack displacement (deg/mm), Axle 2,
                                       !   right side
RACK_KIN_GAIN(2,2)  1 ! Multiplier for table
RACK_KIN_OFFSET(2,2) 0 ! road wheel steer offset added to calculated value (after
                       !   gain) (deg)

! RACK_TRAVEL: Steering rack displacement as a function of pinion angle. The
! rack displacement can be computed from pinion angle. Or, a linear coefficient
! can be multiplied by pinion angle. If tabular, the value can be transformed by
! a gain. A calculated value can also be given a specified offset.

! 1D table: col 1 = pinion angle (deg), col 2 = rack displacement (mm)
RACK_TRAVEL_TABLE(1) LINEAR ! Axle 1
     -745.179,     -68.7467
     -710.291,     -66.1026
     -678.891,     -63.6543
     -650.426,      -61.381
     -624.465,     -59.2644
     -600.664,     -57.2889
     -578.742,     -55.4409
     -558.471,     -53.7083
     -539.658,     -52.0808
     -522.142,      -50.549
     -505.787,     -49.1048
     -490.474,     -47.7407
     -476.103,     -46.4505
     -462.586,     -45.2281
     -449.844,     -44.0684
     -437.812,     -42.9667
     -426.429,     -41.9187
     -415.642,     -40.9206
     -405.404,      -39.969
     -395.673,     -39.0606
     -386.411,     -38.1926
     -377.585,     -37.3623
     -369.162,     -36.5674
     -361.116,     -35.8056
     -353.421,     -35.0748
     -346.055,     -34.3733
            0,            0
      346.055,      34.3733
      353.421,      35.0748
      361.116,      35.8056
      369.162,      36.5674
      377.585,      37.3623
      386.411,      38.1926
      395.673,      39.0606
      405.404,       39.969
      415.642,      40.9206
      426.429,      41.9187
      437.812,      42.9667
      449.844,      44.0684
      462.586,      45.2281
      476.103,      46.4505
      490.474,      47.7407
      505.787,      49.1048
      522.142,       50.549
      539.658,      52.0808
      558.471,      53.7083
      578.742,      55.4409
      600.664,      57.2889
      624.465,      59.2644
      650.426,       61.381
      678.891,      63.6543
      710.291,      66.1026
      745.179,      68.7467
ENDTABLE
RACK_TRAVEL_GAIN(1) 1 ! Multiplier for table
RACK_TRAVEL_OFFSET(1) 0 ! rack displacement offset added to calculated value
                        !   (after gain) (mm)
RACK_TRAVEL_COEFFICIENT(2) 0.1000000015 ! Coefficient: rack displacement per unit
                                        !   pinion angle (mm/deg), Axle 2
RACK_TRAVEL_GAIN(2) 1 ! Multiplier for table
RACK_TRAVEL_OFFSET(2) 0 ! rack displacement offset added to calculated value
                        !   (after gain) (mm)

! RM_TC: Torque converter output to input torque ratio vs. speed ratio of torque
! converter output shaft to engine. The torque ratio can be computed from speed
! ratio. Or, a linear coefficient can be multiplied by speed ratio. If tabular,
! the value can be transformed by a gain. A calculated value can also be given a
! specified offset.

! 1D table: col 1 = speed ratio (-), col 2 = torque ratio (-)
RM_TC_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
            0,        1.864
        0.102,         1.78
        0.202,        1.701
        0.306,        1.608
        0.353,         1.56
          0.4,        1.519
        0.452,        1.464
        0.502,        1.412
        0.551,        1.356
          0.6,        1.309
         0.65,        1.259
          0.7,        1.203
         0.75,        1.151
        0.801,        1.098
         0.82,        1.074
         0.84,        1.048
        0.849,        1.041
        0.861,        1.027
         0.87,        1.014
        0.881,        0.996
         0.89,        0.996
          0.9,        0.993
         0.91,        0.998
        0.921,        0.986
        0.928,        0.993
         0.94,        0.996
        0.951,        0.981
         0.99,            1
            1,            1
ENDTABLE
RM_TC_GAIN          1 ! Multiplier for table
RM_TC_OFFSET        0 ! torque ratio offset added to calculated value (after gain)
                      !   (-)

! ROAD_DZ: Road elevation relative to reference line as a function of station S
! and lateral position L (L increases to the right when looking back toward
! station 0). The dZ can be computed from station and lateral position. Or, a 1D
! table can be used involving only station. Or, a linear coefficient can be
! multiplied by station. The value can be transformed by a gain. A calculated
! value can also be given a specified offset.
ROAD_DZ_CONSTANT(1) 0 ! Constant dZ (m)
ROAD_DZ_GAIN(1)     1 ! Multiplier for table
ROAD_DZ_OFFSET(1)   0 ! dZ offset added to calculated value (after gain) (m)
ROAD_DZ_CONSTANT(2) 0 ! Constant dZ (m)
ROAD_DZ_GAIN(2)     1 ! Multiplier for table
ROAD_DZ_OFFSET(2)   0 ! dZ offset added to calculated value (after gain) (m)

! ROAD_ZS: Road elevation at reference line. The elevation can be computed from
! station. Or, a linear coefficient can be multiplied by station. If tabular, the
! value can be transformed by a gain. A calculated value can also be given a
! specified offset.
ROAD_ZS_CONSTANT    0 ! Constant elevation (m)
ROAD_ZS_GAIN        1 ! Multiplier for table
ROAD_ZS_OFFSET      0 ! elevation offset added to calculated value (after gain)
                      !   (m)

! R_STEER_SPEED: Rear-wheel steering gain due to speed. The gain is: [rear steer
! control]/[driver steer control]. This ratio is multiplied with the nominal
! steering gear input to determine the input to any rear axle steering gear.. The
! gain can be computed from speed. Or, a linear coefficient can be multiplied by
! speed. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
R_STEER_SPEED_CONSTANT(2) 0 ! Constant gain (-)
R_STEER_SPEED_GAIN(2) 1 ! Multiplier for table
R_STEER_SPEED_OFFSET(2) 0 ! gain offset added to calculated value (after gain) (-)

! SPEED_TIME: Speed controller target speed as a function of time. The speed can
! be computed from time. Or, a linear coefficient can be multiplied by time. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.
SPEED_TIME_CONSTANT 119.9999924 ! Constant speed (km/h)
SPEED_TIME_GAIN     1 ! Multiplier for table
SPEED_TIME_OFFSET   0 ! speed offset added to calculated value (after gain) (km/h)

! STEER_COMP: Steer of each wheel on an axle as a function of the total kingpin
! steering moment from both wheels on the axle, MINUS steering due to suspension
! compliance. The steer can be computed from total kingpin moment. Or, a linear
! coefficient can be multiplied by total kingpin moment. If tabular, the value
! can be transformed by a gain. A calculated value can also be given a specified
! offset.
STEER_COMP_COEFFICIENT(1) 0.001000000047 ! Coefficient: steer per unit total
                                         !   kingpin moment (deg/N-m), Axle 1
STEER_COMP_GAIN(1)  1 ! Multiplier for table
STEER_COMP_OFFSET(1) 0 ! steer offset added to calculated value (after gain) (deg)
STEER_COMP_CONSTANT(2) 0 ! Constant steer (deg), Axle 2
STEER_COMP_GAIN(2)  1 ! Multiplier for table
STEER_COMP_OFFSET(2) 0 ! steer offset added to calculated value (after gain) (deg)

! SUSP_DIVE: Suspension susp_dive. The susp_dive can be computed from jounce.
! Or, a linear coefficient can be multiplied by jounce. If tabular, the value can
! be transformed by a gain. A calculated value can also be given a specified
! offset.

! 1D table: col 1 = jounce (mm), col 2 = susp_dive (deg)
SUSP_DIVE_TABLE(1,1) SPLINE ! Axle 1, left side
          -70,     0.282157
          -60,     0.243294
          -50,     0.204028
          -40,     0.164309
          -30,     0.124089
          -20,     0.083323
          -10,     0.041971
            0,            0
           10,    -0.042617
           20,    -0.085893
           30,    -0.129828
           40,    -0.174396
           50,     -0.21954
           60,    -0.265153
           70,    -0.311062
ENDTABLE
SUSP_DIVE_GAIN(1,1) 1 ! Multiplier for table
SUSP_DIVE_OFFSET(1,1) 0 ! susp_dive offset added to calculated value (after gain)
                        !   (deg)

! 1D table: col 1 = jounce (mm), col 2 = susp_dive (deg)
SUSP_DIVE_TABLE(1,2) SPLINE ! Axle 1, right side
          -70,     0.282157
          -60,     0.243294
          -50,     0.204028
          -40,     0.164309
          -30,     0.124089
          -20,     0.083323
          -10,     0.041971
            0,            0
           10,    -0.042617
           20,    -0.085893
           30,    -0.129828
           40,    -0.174396
           50,     -0.21954
           60,    -0.265153
           70,    -0.311062
ENDTABLE
SUSP_DIVE_GAIN(1,2) 1 ! Multiplier for table
SUSP_DIVE_OFFSET(1,2) 0 ! susp_dive offset added to calculated value (after gain)
                        !   (deg)

! 1D table: col 1 = jounce (mm), col 2 = susp_dive (deg)
SUSP_DIVE_TABLE(2,1) SPLINE ! Axle 2, left side
          -70,            0
          -60,            0
          -50,            0
          -40,            0
          -30,            0
          -20,            0
          -10,            0
            0,            0
           10,            0
           20,            0
           30,            0
           40,            0
           50,            0
           60,            0
           70,            0
ENDTABLE
SUSP_DIVE_GAIN(2,1) 1 ! Multiplier for table
SUSP_DIVE_OFFSET(2,1) 0 ! susp_dive offset added to calculated value (after gain)
                        !   (deg)

! 1D table: col 1 = jounce (mm), col 2 = susp_dive (deg)
SUSP_DIVE_TABLE(2,2) SPLINE ! Axle 2, right side
          -70,            0
          -60,            0
          -50,            0
          -40,            0
          -30,            0
          -20,            0
          -10,            0
            0,            0
           10,            0
           20,            0
           30,            0
           40,            0
           50,            0
           60,            0
           70,            0
ENDTABLE
SUSP_DIVE_GAIN(2,2) 1 ! Multiplier for table
SUSP_DIVE_OFFSET(2,2) 0 ! susp_dive offset added to calculated value (after gain)
                        !   (deg)

! SUSP_LAT: Suspension Lateral movement inward. The Lateral movement inward
! movement can be computed from jounce. Or, a linear coefficient can be
! multiplied by jounce. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward movement (mm)
SUSP_LAT_TABLE(1,1) SPLINE ! Axle 1, left side
          -70,      2.81522
          -60,      1.82386
          -50,      1.03219
          -40,     0.437944
          -30,     0.039162
          -20,    -0.165848
          -10,    -0.178513
            0,            0
           10,     0.368777
           20,     0.927155
           30,      1.67473
           40,      2.61133
           50,      3.73709
           60,      5.05237
           70,      6.55783
ENDTABLE
SUSP_LAT_GAIN(1,1)  1 ! Multiplier for table
SUSP_LAT_OFFSET(1,1) 0 ! Lateral movement inward movement offset added to
                       !   calculated value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward movement (mm)
SUSP_LAT_TABLE(1,2) SPLINE ! Axle 1, right side
          -70,      2.81522
          -60,      1.82386
          -50,      1.03219
          -40,     0.437944
          -30,     0.039162
          -20,    -0.165848
          -10,    -0.178513
            0,            0
           10,     0.368777
           20,     0.927155
           30,      1.67473
           40,      2.61133
           50,      3.73709
           60,      5.05237
           70,      6.55783
ENDTABLE
SUSP_LAT_GAIN(1,2)  1 ! Multiplier for table
SUSP_LAT_OFFSET(1,2) 0 ! Lateral movement inward movement offset added to
                       !   calculated value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward movement (mm)
SUSP_LAT_TABLE(2,1) SPLINE ! Axle 2, left side
          -70,      5.34878
          -60,      3.82136
          -50,      2.55534
          -40,      1.54581
          -30,     0.788587
          -20,     0.280222
          -10,     0.018009
            0,            0
           10,      0.22505
           20,     0.692872
           30,      1.40412
           40,      2.36046
           50,      3.56474
           60,      5.02106
           70,      6.73495
ENDTABLE
SUSP_LAT_GAIN(2,1)  1 ! Multiplier for table
SUSP_LAT_OFFSET(2,1) 0 ! Lateral movement inward movement offset added to
                       !   calculated value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward movement (mm)
SUSP_LAT_TABLE(2,2) SPLINE ! Axle 2, right side
          -70,      5.34878
          -60,      3.82136
          -50,      2.55534
          -40,      1.54581
          -30,     0.788587
          -20,     0.280222
          -10,     0.018009
            0,            0
           10,      0.22505
           20,     0.692872
           30,      1.40412
           40,      2.36046
           50,      3.56474
           60,      5.02106
           70,      6.73495
ENDTABLE
SUSP_LAT_GAIN(2,2)  1 ! Multiplier for table
SUSP_LAT_OFFSET(2,2) 0 ! Lateral movement inward movement offset added to
                       !   calculated value (after gain) (mm)

! SUSP_X: Suspension X movement forward. The X movement forward movement can be
! computed from jounce. Or, a linear coefficient can be multiplied by jounce. If
! tabular, the value can be transformed by a gain. A calculated value can also be
! given a specified offset.

! 1D table: col 1 = jounce (mm), col 2 = X movement forward movement (mm)
SUSP_X_TABLE(1,1) SPLINE ! Axle 1, left side
          -70,    -0.779336
          -60,    -0.596671
          -50,    -0.438583
          -40,    -0.304523
          -30,    -0.194019
          -20,    -0.106665
          -10,    -0.042102
            0,            0
           10,     0.019968
           20,     0.018152
           30,    -0.005034
           40,    -0.049059
           50,    -0.113201
           60,    -0.196434
           70,    -0.297272
ENDTABLE
SUSP_X_GAIN(1,1)    1 ! Multiplier for table
SUSP_X_OFFSET(1,1)  0 ! X movement forward movement offset added to calculated
                      !   value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = X movement forward movement (mm)
SUSP_X_TABLE(1,2) SPLINE ! Axle 1, right side
          -70,    -0.779336
          -60,    -0.596671
          -50,    -0.438583
          -40,    -0.304523
          -30,    -0.194019
          -20,    -0.106665
          -10,    -0.042102
            0,            0
           10,     0.019968
           20,     0.018152
           30,    -0.005034
           40,    -0.049059
           50,    -0.113201
           60,    -0.196434
           70,    -0.297272
ENDTABLE
SUSP_X_GAIN(1,2)    1 ! Multiplier for table
SUSP_X_OFFSET(1,2)  0 ! X movement forward movement offset added to calculated
                      !   value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = X movement forward movement (mm)
SUSP_X_TABLE(2,1) SPLINE ! Axle 2, left side
          -70,       2.6892
          -60,      1.76827
          -50,      1.01123
          -40,     0.426265
          -30,     0.022328
          -20,    -0.190752
          -10,    -0.202151
            0,            0
           10,     0.428603
           20,      1.09748
           30,      2.02114
           40,      3.21439
           50,      4.69179
           60,      6.46687
           70,       8.5513
ENDTABLE
SUSP_X_GAIN(2,1)    1 ! Multiplier for table
SUSP_X_OFFSET(2,1)  0 ! X movement forward movement offset added to calculated
                      !   value (after gain) (mm)

! 1D table: col 1 = jounce (mm), col 2 = X movement forward movement (mm)
SUSP_X_TABLE(2,2) SPLINE ! Axle 2, right side
          -70,       2.6892
          -60,      1.76827
          -50,      1.01123
          -40,     0.426265
          -30,     0.022328
          -20,    -0.190752
          -10,    -0.202151
            0,            0
           10,     0.428603
           20,      1.09748
           30,      2.02114
           40,      3.21439
           50,      4.69179
           60,      6.46687
           70,       8.5513
ENDTABLE
SUSP_X_GAIN(2,2)    1 ! Multiplier for table
SUSP_X_OFFSET(2,2)  0 ! X movement forward movement offset added to calculated
                      !   value (after gain) (mm)

! THROTTLE_ENGINE: Throttle input (normalized) vs. time. The normalized throttle
! input can be computed from time. Or, a linear coefficient can be multiplied by
! time. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
THROTTLE_ENGINE_CONSTANT 0 ! Constant normalized throttle input (-)
THROTTLE_ENGINE_GAIN 1 ! Multiplier for table
THROTTLE_ENGINE_OFFSET 0 ! normalized throttle input offset added to calculated
                         !   value (after gain) (-)

! TOE: Suspension toe. The toe can be computed from jounce. Or, a linear
! coefficient can be multiplied by jounce. If tabular, the value can be
! transformed by a gain. A calculated value can also be given a specified offset.

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(1,1) SPLINE ! Axle 1, left side
          -70,    -0.932437
          -60,    -0.740516
          -50,     -0.56874
          -40,    -0.416666
          -30,    -0.283952
          -20,    -0.170354
          -10,    -0.075723
            0,            0
           10,     0.056776
           20,      0.09447
           30,     0.112841
           40,      0.11153
           50,     0.090047
           60,     0.047744
           70,    -0.016224
ENDTABLE
TOE_GAIN(1,1)       1 ! Multiplier for table
TOE_OFFSET(1,1)     0 ! toe offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(1,2) SPLINE ! Axle 1, right side
          -70,    -0.932437
          -60,    -0.740516
          -50,     -0.56874
          -40,    -0.416666
          -30,    -0.283952
          -20,    -0.170354
          -10,    -0.075723
            0,            0
           10,     0.056776
           20,      0.09447
           30,     0.112841
           40,      0.11153
           50,     0.090047
           60,     0.047744
           70,    -0.016224
ENDTABLE
TOE_GAIN(1,2)       1 ! Multiplier for table
TOE_OFFSET(1,2)     0 ! toe offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(2,1) SPLINE ! Axle 2, left side
          -70,     -1.02057
          -60,    -0.828098
          -50,     -0.65623
          -40,    -0.501756
          -30,    -0.361641
          -20,    -0.233037
          -10,    -0.113294
            0,            0
           10,     0.108974
           20,     0.215401
           30,     0.320605
           40,     0.425353
           50,     0.529714
           60,     0.632927
           70,     0.733253
ENDTABLE
TOE_GAIN(2,1)       1 ! Multiplier for table
TOE_OFFSET(2,1)     0 ! toe offset added to calculated value (after gain) (deg)

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(2,2) SPLINE ! Axle 2, right side
          -70,     -1.02057
          -60,    -0.828098
          -50,     -0.65623
          -40,    -0.501756
          -30,    -0.361641
          -20,    -0.233037
          -10,    -0.113294
            0,            0
           10,     0.108974
           20,     0.215401
           30,     0.320605
           40,     0.425353
           50,     0.529714
           60,     0.632927
           70,     0.733253
ENDTABLE
TOE_GAIN(2,2)       1 ! Multiplier for table
TOE_OFFSET(2,2)     0 ! toe offset added to calculated value (after gain) (deg)

! TPREV: Driver preview time. The preview time can be computed from vehicle
! speed. Or, a linear coefficient can be multiplied by vehicle speed. If tabular,
! the value can be transformed by a gain. A calculated value can also be given a
! specified offset.
TPREV_CONSTANT      1 ! Constant preview time (s)
TPREV_GAIN          1 ! Multiplier for table
TPREV_OFFSET        0 ! preview time offset added to calculated value (after gain)
                      !   (s)

! UPSHIFT_TRANS: Transmission speed when upshift occurs as function of throttle.
! IGEAR specifies the lower gear for each table (e.g., IGEAR 2 means upshift from
! 2 to 3). The transmission speed can be computed from throttle position. Or, a
! linear coefficient can be multiplied by throttle position. If tabular, the
! value can be transformed by a gain. A calculated value can also be given a
! specified offset.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
            0,          874
          0.2,          874
          0.8,         1653
            1,         1653
ENDTABLE
UPSHIFT_TRANS_GAIN(1) 1 ! Multiplier for table
UPSHIFT_TRANS_OFFSET(1) 0 ! transmission speed offset added to calculated value
                          !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
            0,         1282
          0.2,         1282
          0.8,         2840
            1,         2840
ENDTABLE
UPSHIFT_TRANS_GAIN(2) 1 ! Multiplier for table
UPSHIFT_TRANS_OFFSET(2) 0 ! transmission speed offset added to calculated value
                          !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
            0,         1800
          0.2,         1800
          0.8,         4167
            1,         4167
ENDTABLE
UPSHIFT_TRANS_GAIN(3) 1 ! Multiplier for table
UPSHIFT_TRANS_OFFSET(3) 0 ! transmission speed offset added to calculated value
                          !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
            0,         2525
          0.2,         2525
          0.8,         5850
            1,         5850
ENDTABLE
UPSHIFT_TRANS_GAIN(4) 1 ! Multiplier for table
UPSHIFT_TRANS_OFFSET(4) 0 ! transmission speed offset added to calculated value
                          !   (after gain) (rpm)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
            0,         3093
          0.2,         3093
          0.8,         8205
            1,         8205
ENDTABLE
UPSHIFT_TRANS_GAIN(5) 1 ! Multiplier for table
UPSHIFT_TRANS_OFFSET(5) 0 ! transmission speed offset added to calculated value
                          !   (after gain) (rpm)

! WIND_HEADING: Wind heading (yaw) relative to ground. When vehicle yaw is zero,
! then 0 deg -> tailwind, 90 deg -> from right, 180 deg -> headwind. The heading
! can be computed from time. Or, a linear coefficient can be multiplied by time.
! If tabular, the value can be transformed by a gain. A calculated value can also
! be given a specified offset.
WIND_HEADING_CONSTANT 0 ! Constant heading (deg)
WIND_HEADING_GAIN   1 ! Multiplier for table
WIND_HEADING_OFFSET 0 ! heading offset added to calculated value (after gain)
                      !   (deg)

! WIND_SPEED: Wind speed relative to ground as a function of time. The wind
! speed can be computed from time. Or, a linear coefficient can be multiplied by
! time. If tabular, the value can be transformed by a gain. A calculated value
! can also be given a specified offset.
WIND_SPEED_CONSTANT 0 ! Constant wind speed (km/h)
WIND_SPEED_GAIN     1 ! Multiplier for table
WIND_SPEED_OFFSET   0 ! wind speed offset added to calculated value (after gain)
                      !   (km/h)

! Z_PROFILE: Road profile (roughness input). The elevation can be computed from
! distance travelled. If tabular, the value can be transformed by a gain. A
! calculated value can also be given a specified offset.
Z_PROFILE_CONSTANT(1) 0 ! Constant elevation (mm), left side
Z_PROFILE_GAIN(1)   1 ! Multiplier for table
Z_PROFILE_OFFSET(1) 0 ! elevation offset added to calculated value (after gain)
                      !   (mm)
Z_PROFILE_CONSTANT(2) 0 ! Constant elevation (mm), right side
Z_PROFILE_GAIN(2)   1 ! Multiplier for table
Z_PROFILE_OFFSET(2) 0 ! elevation offset added to calculated value (after gain)
                      !   (mm)

!-----------------------------------------------------------------------------------
! CALCULATED VEHICLE MASS AND LOAD PROPERTIES
!-----------------------------------------------------------------------------------
! The following inertia properties and axle loads with the keyword CALC in
! the name are approximate. They are calculated for the vehicle in its design
! load configuration, with zero pitch and roll angles. Usually the tire
! sizes and load conditions cause some vehicle pitch, which causes the actual
! axle loads and wheel heights to be different.

! Approximate static axle loads FZA_L and MZA_L: laden vehicle
FZA_L(1)  8266.138672 ! CALC -- Axle 1 load, laden vehicle (N)
FZA_L(2)  5620.077637 ! CALC -- Axle 2 load, laden vehicle (N)
MZA_L(1)  842.9115601 ! CALC -- Axle 1 load, laden vehicle (kg)
MZA_L(2)  573.0884399 ! CALC -- Axle 2 load, laden vehicle (kg)
 
! Wheel-center heights HWC_UL (axle average) for the vehicle unladen.
HWC_UL(1) 297.8725281 ! CALC -- Approximate wheel-center height for axle 1 (mm)
HWC_UL(2)  303.675293 ! CALC -- Approximate wheel-center height for axle 2 (mm)
 
! Approximate static axle loads FZA_UL and MZA_UL: unladen vehicle
FZA_UL(1) 8266.138672 ! CALC -- Axle 1 load, unladen vehicle (N)
FZA_UL(2) 5620.077637 ! CALC -- Axle 2 load, unladen vehicle (N)
MZA_UL(1) 842.9115601 ! CALC -- Axle 1 load, unladen vehicle (kg)
MZA_UL(2) 573.0884399 ! CALC -- Axle 2 load, unladen vehicle (kg)
 
! Calculated properties for TPL: total payload for vehicle
LX_CG_TPL           0 ! CALC -- X distance TPL CG is behind vehicle origin (mm)
Y_CG_TPL            0 ! CALC -- Y coord. of TPL CG (mm)
H_CG_TPL            0 ! CALC -- Height (Z coord.) of TPL CG (mm)
M_TPL               0 ! CALC -- Mass of TPL (kg)
W_TPL               0 ! CALC -- Weight of TPL (N)
IXX_TPL             0 ! CALC -- Roll moment of inertia of TPL (kg-m2)
IYY_TPL             0 ! CALC -- Pitch moment of inertia of TPL (kg-m2)
IZZ_TPL             0 ! CALC -- Yaw moment of inertia of TPL (kg-m2)
IXY_TPL             0 ! CALC -- XY product of inertia of TPL (kg-m2)
IXZ_TPL             0 ! CALC -- XZ product of inertia of TPL (kg-m2)
IYZ_TPL             0 ! CALC -- YZ product of inertia of TPL (kg-m2)
 
! Calculated properties for SL: vehicle sprung mass when laden
LX_CG_SL         1016 ! CALC -- X distance SL CG is behind vehicle origin (mm)
Y_CG_SL             0 ! CALC -- Y coord. of SL CG (mm)
H_CG_SL           540 ! CALC -- Height (Z coord.) of SL CG (mm)
M_SL             1274 ! CALC -- Mass of SL (kg)
W_SL      12493.67188 ! CALC -- Weight of SL (N)
IXX_SL    606.0999756 ! CALC -- Roll moment of inertia of SL (kg-m2)
IYY_SL           1523 ! CALC -- Pitch moment of inertia of SL (kg-m2)
IZZ_SL           1523 ! CALC -- Yaw moment of inertia of SL (kg-m2)
IXY_SL              0 ! CALC -- XY product of inertia of SL (kg-m2)
IXZ_SL              0 ! CALC -- XZ product of inertia of SL (kg-m2)
IYZ_SL              0 ! CALC -- YZ product of inertia of SL (kg-m2)
 
! Calculated properties for TL: total vehicle when laden
LX_CG_TL  1043.377197 ! CALC -- X distance TL CG is behind vehicle origin (mm)
Y_CG_TL             0 ! CALC -- Y coord. of TL CG (mm)
H_CG_TL   517.5367432 ! CALC -- Height (Z coord.) of TL CG (mm)
M_TL             1416 ! CALC -- Mass of TL (kg)
W_TL       13886.2168 ! CALC -- Weight of TL (N)
IXX_TL    696.5929565 ! CALC -- Roll moment of inertia of TL (kg-m2)
IYY_TL    1778.468262 ! CALC -- Pitch moment of inertia of TL (kg-m2)
IZZ_TL    1852.540405 ! CALC -- Yaw moment of inertia of TL (kg-m2)
IXY_TL              0 ! CALC -- XY product of inertia of TL (kg-m2)
IXZ_TL   -7.812772751 ! CALC -- XZ product of inertia of TL (kg-m2)
IYZ_TL              0 ! CALC -- YZ product of inertia of TL (kg-m2)
 
! Calculated properties for TU: total vehicle when unladen
LX_CG_TU  1043.377197 ! CALC -- X distance TU CG is behind vehicle origin (mm)
Y_CG_TU             0 ! CALC -- Y coord. of TU CG (mm)
H_CG_TU   517.5367432 ! CALC -- Height (Z coord.) of TU CG (mm)
M_TU             1416 ! CALC -- Mass of TU (kg)
W_TU       13886.2168 ! CALC -- Weight of TU (N)
IXX_TU    696.5929565 ! CALC -- Roll moment of inertia of TU (kg-m2)
IYY_TU    1778.468262 ! CALC -- Pitch moment of inertia of TU (kg-m2)
IZZ_TU    1852.540405 ! CALC -- Yaw moment of inertia of TU (kg-m2)
IXY_TU              0 ! CALC -- XY product of inertia of TU (kg-m2)
IXZ_TU   -7.812772751 ! CALC -- XZ product of inertia of TU (kg-m2)
IYZ_TU              0 ! CALC -- YZ product of inertia of TU (kg-m2)
 

! Design path that defines horizontal road geometry.
! Column 1 = input X coordinates, column 2 = input Y coordinates,
! column 3 = calculated station S. All units are m
YIN_TABLE ! special table with column 3 calculated
                0,                 0,                 0
               50,                 0,                50
              100,                 0,               100
ENDTABLE


!-----------------------------------------------------------------------------------
! NEW VARIABLES DEFINED AT RUN TIME
!-----------------------------------------------------------------------------------
DEFINE_OUTPUT mod1_L1 = 5.3361e-008; UNITS = deg;
DEFINE_OUTPUT mod2_L1 = 1.11759e-007; UNITS = km/h;
DEFINE_OUTPUT VXSLIPL1 = -8.01086e-005;
DEFINE_OUTPUT mod3_L1 = 8.01086e-005;
DEFINE_OUTPUT mod4_L1 = 8.01086e-005;
DEFINE_OUTPUT mod1_R1 = 5.3361e-008; UNITS = deg;
DEFINE_OUTPUT mod2_R1 = 1.11759e-007; UNITS = km/h;
DEFINE_OUTPUT VXSLIPR1 = -8.01086e-005;
DEFINE_OUTPUT mod3_R1 = 8.01086e-005;
DEFINE_OUTPUT mod4_R1 = 8.01086e-005;
DEFINE_OUTPUT mod1_L2 = 0; UNITS = deg;
DEFINE_OUTPUT mod2_L2 = 0; UNITS = km/h;
DEFINE_OUTPUT VXSLIPL2 = -8.39233e-005;
DEFINE_OUTPUT mod3_L2 = 8.39233e-005;
DEFINE_OUTPUT mod4_L2 = 8.39233e-005;
DEFINE_OUTPUT mod1_R2 = 0; UNITS = deg;
DEFINE_OUTPUT mod2_R2 = 0; UNITS = km/h;
DEFINE_OUTPUT VXSLIPR2 = -8.39233e-005;
DEFINE_OUTPUT mod3_R2 = 8.39233e-005;
DEFINE_OUTPUT mod4_R2 = 8.39233e-005;

!-----------------------------------------------------------------------------------
! EQUATIONS OUT (AT END OF EACH TIME STEP)
!-----------------------------------------------------------------------------------
EQ_OUT MOD1_L1 = ABS(ALPHA_L1) ;
EQ_OUT MOD2_L1 = ABS(VYTC_L1) ;
EQ_OUT VXSLIPL1 = VXCENL1 -VX_L1 ;
EQ_OUT MOD3_L1 = ABS(VXSLIPL1) ;
EQ_OUT MOD4_L1 = ABS(VXSLIPL1) ;
EQ_OUT MOD1_R1 = ABS(ALPHA_R1) ;
EQ_OUT MOD2_R1 = ABS(VYTC_R1) ;
EQ_OUT VXSLIPR1 = VXCENR1 -VX_R1 ;
EQ_OUT MOD3_R1 = ABS(VXSLIPR1) ;
EQ_OUT MOD4_R1 = ABS(VXSLIPR1) ;
EQ_OUT MOD1_L2 = ABS(ALPHA_L2) ;
EQ_OUT MOD2_L2 = ABS(VYTC_L2) ;
EQ_OUT VXSLIPL2 = VXCENL2 -VX_L2 ;
EQ_OUT MOD3_L2 = ABS(VXSLIPL2) ;
EQ_OUT MOD4_L2 = ABS(VXSLIPL2) ;
EQ_OUT MOD1_R2 = ABS(ALPHA_R2) ;
EQ_OUT MOD2_R2 = ABS(VYTC_R2) ;
EQ_OUT VXSLIPR2 = VXCENR2 -VX_R2 ;
EQ_OUT MOD3_R2 = ABS(VXSLIPR2) ;
EQ_OUT MOD4_R2 = ABS(VXSLIPR2) ;


END
